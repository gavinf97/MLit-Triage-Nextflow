<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with MathML3 v1.2 20190208//EN" "JATS-archivearticle1-mathml3.dtd"> 
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?><?DTDIdentifier.IdentifierType public?><?SourceDTD.DTDName A++V2.4.dtd?><?SourceDTD.Version 2.4?><?ConverterInfo.XSLTName springer2nlmx2.xsl?><?ConverterInfo.Version 1?><front><journal-meta><journal-id journal-id-type="nlm-ta">Genome Biol</journal-id><journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id><journal-title-group><journal-title>Genome Biology</journal-title></journal-title-group><issn pub-type="ppub">1474-7596</issn><issn pub-type="epub">1474-760X</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">7333383</article-id><article-id pub-id-type="publisher-id">2075</article-id><article-id pub-id-type="doi">10.1186/s13059-020-02075-3</article-id><article-categories><subj-group subj-group-type="heading"><subject>Method</subject></subj-group></article-categories><title-group><article-title>Single-cell ATAC-seq signal extraction and enhancement with SCATE</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Ji</surname><given-names>Zhicheng</given-names></name><address><email>zhichengji@gmail.com</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Zhou</surname><given-names>Weiqiang</given-names></name><address><email>kenandzhou@hotmail.com</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Hou</surname><given-names>Wenpin</given-names></name><address><email>whou10@jhu.edu</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author" corresp="yes"><contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-6480-0141</contrib-id><name><surname>Ji</surname><given-names>Hongkai</given-names></name><address><email>hji@jhu.edu</email></address><xref ref-type="aff" rid="Aff1"/></contrib><aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.21107.35</institution-id><institution-id institution-id-type="ISNI">0000 0001 2171 9311</institution-id><institution>Department of Biostatistics, Johns Hopkins Bloomberg School of Public Health, </institution></institution-wrap>615 North Wolfe Street, Baltimore, MD, 21205 USA </aff></contrib-group><pub-date pub-type="epub"><day>3</day><month>7</month><year>2020</year></pub-date><pub-date pub-type="pmc-release"><day>3</day><month>7</month><year>2020</year></pub-date><pub-date pub-type="collection"><year>2020</year></pub-date><volume>21</volume><elocation-id>161</elocation-id><history><date date-type="received"><day>10</day><month>10</month><year>2019</year></date><date date-type="accepted"><day>15</day><month>6</month><year>2020</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s) 2020</copyright-statement><license license-type="OpenAccess"><license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article&#x02019;s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article&#x02019;s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p></license></permissions><abstract id="Abs1"><p id="Par1">Single-cell sequencing assay for transposase-accessible chromatin (scATAC-seq) is the state-of-the-art technology for analyzing genome-wide regulatory landscapes in single cells. Single-cell ATAC-seq data are sparse and noisy, and analyzing such data is challenging. Existing computational methods cannot accurately reconstruct activities of individual cis-regulatory elements (CREs) in individual cells or rare cell subpopulations. We present a new statistical framework, SCATE, that adaptively integrates information from co-activated CREs, similar cells, and publicly available regulome data to substantially increase the accuracy for estimating activities of individual CREs. We demonstrate that SCATE can be used to better reconstruct the regulatory landscape of a heterogeneous sample.</p></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Single cell</kwd><kwd>Chromatin</kwd><kwd>scATAC-seq</kwd><kwd>Bioinformatics</kwd><kwd>Statistical modeling</kwd><kwd>Machine learning</kwd><kwd>Software</kwd><kwd>Genomics</kwd><kwd>DNase-seq</kwd><kwd>Gene regulation</kwd></kwd-group><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; The Author(s) 2020</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1"><title>Background</title><p>A cell&#x02019;s regulome, defined as the activities of all cis-regulatory elements (CREs) in its genome, contains crucial information for understanding how genes&#x02019; transcriptional activities are regulated in normal and pathological conditions. Conventionally, regulome is measured using bulk technologies such as chromatin immunoprecipitation coupled with sequencing (ChIP-seq [<xref ref-type="bibr" rid="CR1">1</xref>]), DNase I hypersensitive site sequencing (DNase-seq [<xref ref-type="bibr" rid="CR2">2</xref>]), and assay for transposase-accessible chromatin followed by sequencing (ATAC-seq [<xref ref-type="bibr" rid="CR3">3</xref>]). These technologies measure cells&#x02019; average behavior in a biological sample consisting of thousands to millions of cells. They cannot analyze each individual cell. When a heterogeneous sample (e.g., a tissue sample) consisting of multiple cell types or cell states is analyzed, these bulk technologies may miss important biological signals carried by only a subset of cells.</p><p>Recent innovations in single-cell genomic technologies make it possible to map regulomes in individual cells. For example, single-cell ATAC-seq (scATAC-seq [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR5">5</xref>]) and single-cell DNase-seq (scDNase-seq [<xref ref-type="bibr" rid="CR6">6</xref>]) are two technologies for analyzing open chromatin, a hallmark for active cis-regulatory elements, in single cells. Single-cell ChIP-seq (scChIP-seq [<xref ref-type="bibr" rid="CR7">7</xref>]), on the other hand, allows single-cell analysis of histone modification. Technologies for simultaneously mapping open chromatin along with other -omics modalities are also under active development (e.g., scNMT-seq [<xref ref-type="bibr" rid="CR8">8</xref>], Pi-ATAC [<xref ref-type="bibr" rid="CR9">9</xref>], sci-CAR [<xref ref-type="bibr" rid="CR10">10</xref>]). These single-cell technologies enable scientists to examine a heterogeneous sample with an unprecedented cellular resolution, allowing them to systematically discover and characterize unknown cell subpopulations.</p><p>Among the existing single-cell regulome mapping technologies, scATAC-seq is the most widely used one due to its relatively simple and robust protocol and its unparalleled throughput for analyzing a large number of cells. It is adopted by the Human Cell Atlas (HCA) Consortium as a major tool for characterizing regulatory landscape of human cells ([<xref ref-type="bibr" rid="CR11">11</xref>]).</p><p>Data produced by scATAC-seq are highly sparse. For instance, a typical human scATAC-seq dataset contains 10<sup>2</sup>&#x02013; 10<sup>4</sup> cells and 10<sup>3</sup>&#x02013; 10<sup>5</sup> sequence reads per cell. However, the number of CREs in the genome far exceeds 10<sup>5</sup>. Thus, in a typical cell, most CREs do not have any mapped read. For CREs with reads, the number of mapped reads seldom exceeds two (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>a,b) because each locus has no more than two copies of assayable chromatin per cell in a diploid genome. Also, existing single-cell regulome mapping technologies including scATAC-seq destroy cells during the assay. Thus, they only get a snapshot of a cell at one time point. However, molecular events such as transcription factor (TF)-DNA binding and their dissociation are temporal stochastic processes. The steady-state activity of a CRE in a cell is determined by the probability that such stochastic events occur over time. Since probability is a continuous measure, the overall activity of a CRE in a cell should be a continuous signal in principle. The sparse and nearly binary scATAC-seq data collected for each CRE at one single time point therefore cannot accurately describe the CRE&#x02019;s continuous steady-state activity in a cell.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Background and motivation. <bold>a</bold>&#x02013;<bold>d</bold> An example genomic region showing chromatin accessibility in GM12878 and K562 measured by different methods including <bold>a</bold> bulk DNase-seq, <bold>b</bold> scATAC-seq from one single cell, <bold>c</bold> scATAC-seq by pooling 100 cells, <bold>d</bold> SCATE-reconstructed scATAC-seq signal from one single cell. <bold>e</bold> Illustration of CRE-specific baseline activities using the same genomic region. Bulk DNase-seq data from multiple different cell types show that some loci tend to have higher activity than others regardless of cell type (e.g., compare the two loci in blue boxes). <bold>f</bold> At the individual CRE level, the correlation between the log-normalized scATAC-seq read count in one GM12878 cell and the log-normalized bulk GM12878 DNase-seq signal is low (Pearson correlation = 0.394). Each dot is a CRE. <bold>g</bold> After aggregating multiple CREs based on co-activated CRE pathways by SCRAT, the correlation between the CRE pathway activities in one GM12878 cell and the bulk GM12878 DNase-seq signal (both at log-scale) is substantially higher (Pearson correlation = 0.696). Each dot is a CRE pathway</p></caption><graphic xlink:href="13059_2020_2075_Fig1_HTML" id="MO1"/></fig></p><p>The discrete, sparse, and noisy data pose significant data analysis challenges. Conventional methods developed for bulk data cannot effectively analyze single-cell regulome data [<xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR13">13</xref>]. As a result, there is a pressing need for new computational tools for single-cell regulome analysis. Recently, several single-cell regulome analysis methods have been developed. They can be grouped into three categories based on how they deal with the sparsity (Additional file&#x000a0;<xref rid="MOESM1" ref-type="media">1</xref>: Table S1).</p><p>Methods in category 1, including chromVAR [<xref ref-type="bibr" rid="CR12">12</xref>], SCRAT [<xref ref-type="bibr" rid="CR13">13</xref>], and BROCKMAN [<xref ref-type="bibr" rid="CR14">14</xref>], tackle sparsity by aggregating reads from multiple CREs. Instead of analyzing each CRE, they combine reads from CREs that share either a TF binding motif, a k-mer, or a co-activation pattern in DNase-seq data from the Encyclopedia of DNA Elements (ENCODE) [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR16">16</xref>]. The aggregated data on motifs, k-mers, or co-activated CRE pathways are then used as features to cluster cells or characterize cell heterogeneity. To demonstrate the effect of combining CREs, Fig.<xref rid="Fig1" ref-type="fig">1</xref>f shows chromatin accessibility in cell line GM12878 computed using non-aggregated data at each individual CRE, and Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>g shows accessibility computed using SCRAT aggregated data (i.e., average normalized read count across CREs) for each co-activated CRE pathway. After aggregation, the signal in scATAC-seq became more continuous and showed higher correlation with the bulk DNase-seq-measured accessibility. One major drawback of aggregating multiple CREs is the loss of CRE-specific information. Thus, existing methods in this category do not analyze the activity of each individual CRE.</p><p>Methods in category 2, including Dr.seq2 [<xref ref-type="bibr" rid="CR17">17</xref>] and Cicero [<xref ref-type="bibr" rid="CR18">18</xref>], tackle sparsity by pooling multiple cells. Dr.seq2 [<xref ref-type="bibr" rid="CR17">17</xref>] pools cells and applies MACS [<xref ref-type="bibr" rid="CR19">19</xref>] to the pooled pseudobulk sample to call peaks. Cicero [<xref ref-type="bibr" rid="CR18">18</xref>] first pools the binary chromatin accessibility profiles from similar cells to create pseudobulk samples. It then uses the pseudobulk samples to study the pairwise correlation among different CREs. Typically, scATAC-seq data pooled from multiple cells are more continuous than data from a single cell, and the pooled data also correlate better with bulk data (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>a&#x02013;c). Despite this, pooling cells does not fully eliminate sparsity, particularly in a rare cell type with only a few cells. Also, pooling cells may result in loss of cell-specific information. Thus, one may want to only pool cells that are highly similar in order to better characterize a heterogeneous cell population. This could result in grouping cells into many small cell clusters, each with only a few highly similar cells. In that situation, pooling cells alone may not be enough for removing sparsity and accurately estimating activities of individual CREs.</p><p>Methods in category 3 directly work with the peak-by-cell read count matrix or its binarized version. For example, Scasat [<xref ref-type="bibr" rid="CR20">20</xref>] converts the peak-by-cell read count matrix into a binary accessibility matrix and uses this binary matrix to cluster cells. Destin [<xref ref-type="bibr" rid="CR21">21</xref>] applies weighted principal components and K-means clustering to the binary accessibility matrix to cluster cells. scABC [<xref ref-type="bibr" rid="CR22">22</xref>] uses the read count matrix to cluster cells via a weighted K-medoids clustering algorithm. PRISM [<xref ref-type="bibr" rid="CR23">23</xref>] uses the binary accessibility matrix to compute cosine distance between cells and then uses this distance to evaluate the degree of heterogeneity of a cell population. CisTopic [<xref ref-type="bibr" rid="CR24">24</xref>] models the binary accessibility matrix using Latent Dirichlet Allocation (LDA). This approach views each cell as a mixture of multiple topics, and each topic is a collection of peak regions and their usage preferences. The topic-cell and region-topic vectors provide a low-dimensional representation of the data. Cells and peaks are then clustered in this low-dimensional space. Category 3 methods typically are designed for specific tasks such as clustering and assessment of sample variability rather than estimating activities of individual CREs.</p><p>In summary, while existing methods provide tools for clustering cells, identifying co-accessible CREs, and analyzing sample heterogeneity, they do not address the fundamental issue of accurately reconstructing activities of each individual CRE using sparse data. Knowing activities of each individual CRE is crucial for functional studies. For example, such knowledge can be used to inform the selection of CREs for knock-out or transgenic experiments. In order to facilitate accurate reconstruction of CRE activities using scATAC-seq data, this article introduces a new statistical and analytical framework SCATE (Single-Cell ATAC-seq Signal Extraction and Enhancement). SCATE employs a model-based approach to integrate three types of information: (1) co-activated CREs, (2) similar cells, and (3) publicly available bulk regulome data. Unlike the existing methods that either aggregate CREs (category 1) or cells (category 2) but not both, SCATE combines both types of information. SCATE also uniquely uses public regulome data to enhance the analysis and adaptively optimizes the analysis resolution based on the available information in the scATAC-seq data. SCATE is freely available as an open source R package via GitHub. Compared to the existing methods, SCATE can more accurately predict CRE activities and transcription factor binding sites using the sparse data from a single cell (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>b, d) or a rare cell type as we shall demonstrate.</p></sec><sec id="Sec2" sec-type="results"><title>Results</title><sec id="Sec3"><title>SCATE model for a single cell</title><p>SCATE begins with compiling a list of candidate CREs and grouping co-activated CREs into clusters. Currently, most scATAC-seq data are generated from human and mouse. For user&#x02019;s convenience, for these two species we have constructed a Bulk DNase-seq Database (BDDB) consisting of normalized DNase-seq samples from diverse cell types generated by the ENCODE project. For each species, we compiled putative CREs using BDDB and clustered these CREs based on their co-activation patterns across BDDB samples. Users may augment these precompiled CRE lists by using SCATE-provided functions to (1) add and normalize their own bulk and pseudo-bulk (obtained by pooling single cells) DNase-seq or ATAC-seq samples to BDDB and then (2) re-detect and cluster CREs using the updated BDDB. These functions can also be used to create CRE database for other species. For human and mouse, saturation analyses show that BDDB covers most CREs one would discover in a new DNase-seq or ATAC-seq dataset. On average, a new sample only contributes &#x0003c;0.2% new CREs to our precompiled CRE lists (Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S1). Thus, in order to save time and computation for CRE detection and clustering, users may directly use the precompiled CRE lists in BDDB without significant loss. In this article, our analyses using SCATE are all carried out using these precompiled CREs as the input unless otherwise specified.</p><p>Given a list of CREs, their clustering structure, and scATAC-seq data from a single cell, SCATE will estimate the activity of each CRE. Let <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub> denote the observed read count for CRE <italic>i</italic> (<italic>i</italic>=1,&#x02026;,<italic>I</italic>) in cell <italic>j</italic>, and let <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> denote the unobserved true activity. The goal is to infer the unobserved <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> from the observed data <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub>. We assume the following data generative model:
<disp-formula id="Equa"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{aligned} &#x00026;\quad y_{i,j} \sim Poisson (L_{j} \mu^{sc}_{i,j}) \\ &#x00026;\quad \log(\mu^{sc}_{i,j}) = h_{j}(\log(\mu_{i,j}))\\ &#x00026;\quad \log(\mu_{i,j})=m_{i} + s_{i} \delta_{i,j} \\ &#x00026;\quad \boldsymbol{\delta}_{j} = \mathbf{X} \boldsymbol{\beta}_{j} \\ \end{aligned} $$ \end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0223c;</mml:mo><mml:mtext mathvariant="italic">Poisson</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:munderover><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:munderover><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b2;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr/></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2020_2075_Article_Equa.gif" position="anchor"/></alternatives></disp-formula></p><p>This model is illustrated in Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref>a. Below, we will explain the model and key components of the SCATE workflow in detail.
<fig id="Fig2"><label>Fig. 2</label><caption><p>SCATE overview. <bold>a</bold> SCATE model for a single cell. <bold>b</bold> SCATE model for multiple cells</p></caption><graphic xlink:href="13059_2020_2075_Fig2_HTML" id="MO2"/></fig></p><p>(1) Modeling a CRE&#x02019;s cell-independent but CRE-specific baseline behavior using publicly available bulk regulome data. By analyzing large amounts of ENCODE DNase-seq data, we found that these bulk data contain invaluable information not captured by the sparse single-cell data. In particular, our recent analysis of DNase-seq data from diverse cell types shows that different CREs have different baseline activities [<xref ref-type="bibr" rid="CR25">25</xref>]. Some CREs tend to have higher activity levels than others regardless of cell type (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>e: compare two CREs in blue boxes). As a result, the mean DNase-seq profile across diverse cell types can explain a substantial proportion of data variation in the regulome profile of each individual cell type. In fact, 55.7% of the total data variance in BDDB human DNase-seq samples is explained by the mean human DNase-seq profile, and 60.1% of the total data variance in BDDB mouse DNase-seq samples is explained by the mean mouse DNase-seq profile (Methods). The Pearson correlation coefficient between the mean DNase-seq profile and each individual DNase-seq sample in the BDDB is bigger than 0.5 for most of the samples, and the median correlation is 0.78 for human and 0.81 for mouse (Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S2). In other words, the mean DNase-seq profile to a large extent predicts the DNase-seq profile in each individual cell type, even though the mean DNase-seq profile cannot capture cell-type-specific CRE activities. In [<xref ref-type="bibr" rid="CR25">25</xref>], we found that the mean DNase-seq profile correlates well with independently measured TF binding activities, indicating that differences in the baseline activity among different CREs captured by the mean DNase-seq profile are real biological signals rather than technical artifacts. These highly reproducible CRE-specific baseline activities cannot be captured by the sparse data in a single cell or by pooling a small number of cells (Fig.. <xref rid="Fig1" ref-type="fig">1</xref>b, c, and e). Thus, in order to better reconstruct activities of each individual CRE from scATAC-seq, SCATE explicitly models these cell-type-invariant but CRE-specific baseline behaviors by fitting a statistical model to the large compendium of bulk DNase-seq data in BDDB. This allows us to estimate the baseline mean activity (<italic>m</italic><sub><italic>i</italic></sub>) and variability (<italic>s</italic><sub><italic>i</italic></sub>) of each CRE <italic>i</italic>.</p><p>(2) Modeling a CRE&#x02019;s cell-dependent activity by borrowing information from similar CREs. We model the activity of CRE <italic>i</italic> in cell <italic>j</italic>, denoted by <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub>, by decomposing it into two components: a cell-type invariant component that models the baseline behavior (<italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub>), and a cell-dependent component <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub> for modeling the CRE&#x02019;s cell-specific activity. In other words, log(<italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub>)=<italic>m</italic><sub><italic>i</italic></sub>+<italic>s</italic><sub><italic>i</italic></sub><italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub>. The cell-type invariant component is learned from BDDB as described above. The cell-dependent component is learned using scATAC-seq data in each cell. To do so, we leverage CREs&#x02019; clustering structure. Recall that co-activated CREs are grouped into clusters. We assume that CREs in the same cluster have the same <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub>. Thus, information is shared across multiple co-activated CREs. Mathematically, this amounts to assuming <bold><italic>&#x003b4;</italic></bold><sub><italic>j</italic></sub>=<bold>X</bold><bold><italic>&#x003b2;</italic></bold><sub><italic>j</italic></sub> where <bold><italic>&#x003b4;</italic></bold><sub><italic>j</italic></sub> is the vector of all CREs&#x02019; activities in cell <italic>j</italic>, <bold>X</bold> is a binary matrix that encodes CREs&#x02019; cluster membership, and <bold><italic>&#x003b2;</italic></bold><sub><italic>j</italic></sub> is a vector containing the activities of CRE clusters (see Methods). Unlike other methods, we only share information through <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub> rather than assuming that <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> is the same across similar CREs. In our approach, two CREs in the same cluster have the same <italic>&#x003b4;</italic>, but they can have different activities (i.e., different <italic>&#x003bc;</italic>s) because of the difference in their CRE-specific baseline behaviors.</p><p>(3) Bulk and single-cell data normalization. Since CREs&#x02019; baseline characteristics are learned from bulk DNase-seq data but our goal is to model scATAC-seq data, we need to reconcile differences between these two technologies. To do so, we assume that <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> is the unobserved true activity of CRE <italic>i</italic> in cell <italic>j</italic> one would obtain if one could measure a bulk DNase-seq sample consisting of cells identical to cell <italic>j</italic>. In scATAC-seq data, <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> is distorted to become <inline-formula id="IEq1"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mu _{i,j}^{sc}$\end{document}</tex-math><mml:math id="M4"><mml:msubsup><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq1.gif"/></alternatives></inline-formula> due to technical biases in scATAC-seq compared to bulk DNase-seq. These unknown technical biases are modeled using a cell-specific monotone function <italic>h</italic><sub><italic>j</italic></sub>(.) such that <inline-formula id="IEq2"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\log (\mu _{i,j}^{sc}) = h_{j}(\log (\mu _{i,j}))$\end{document}</tex-math><mml:math id="M6"><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:munderover><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:munderover><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq2.gif"/></alternatives></inline-formula>. The observed scATAC-seq read count data are then modeled using Poisson distributions with mean <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$L_{j}\mu _{i,j}^{sc}$\end{document}</tex-math><mml:math id="M8"><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq3.gif"/></alternatives></inline-formula> where <italic>L</italic><sub><italic>j</italic></sub> is cell <italic>j</italic>&#x02019;s library size. The technical bias function <italic>h</italic><sub><italic>j</italic></sub>(.) normalizes scATAC-seq and bulk DNase-seq data. We developed a method to estimate this unknown function by using CREs whose activities are nearly constant across diverse cell types in BDDB. Once <italic>h</italic><sub><italic>j</italic></sub>(.) is estimated, CRE activities <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub> and <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> can be inferred by fitting the SCATE model to the observed read count data.</p><p>(4) Adaptively optimizing the analysis resolution based on available data. In order to examine the activity of each individual CRE, ideally one would hope to pool as few CREs as possible. However, when data are sparse, pooling too few CREs will lack the power to robustly distinguish biological signals from noise. Thus, the optimal analysis should carefully balance these two competing needs. All existing methods reviewed in category 1 pool CREs based on fixed and predefined pathways (e.g., all motif sites of a TF binding motif). They do not adaptively tune the analysis resolution based on the amount of available information. In SCATE, co-activated CREs are grouped into <italic>K</italic> clusters. Information is shared among CREs in the same cluster. We uniquely treat <italic>K</italic> as a tuning parameter and developed a cross-validation procedure to adaptively choose the optimal <italic>K</italic> based on the available data. When the data is highly sparse, SCATE will choose a small <italic>K</italic> so that each cluster contains a large number of CREs. As a result, the activity of a CRE will be estimated by borrowing information from many other CREs. This sacrifices some CRE-specific information in exchange for higher estimation precision (i.e., lower estimation variance). When the data is less sparse and more CREs have non-zero read counts, SCATE will choose a large <italic>K</italic> so that each cluster will contain a small number of CREs. As a result, the CRE activity estimation will borrow information from only a few most similar CREs, and more CRE-specific information will be retained.</p><p>(5) Postprocessing. After estimating CRE activities, we will further process all genomic regions outside the input CRE list. SCATE will transform read counts at these remaining regions to bring them to a scale normalized with the reconstructed CRE activities. The transformed data can then be used for downstream analyses such as peak calling, TF binding site prediction, or other whole-genome analyses.</p></sec><sec id="Sec4"><title>SCATE for a cell population consisting of multiple cells</title><p>For a homogeneous cell population with multiple cells, we will pool reads from all cells together to create a pseudo-cell. We will then treat the pseudo-cell as a single cell and apply SCATE to reconstruct CRE activities. Similar to Dr.seq2, this approach combines similar cells to estimate CRE activities. Unlike Dr.seq2, we also combine information from co-activated CREs and public bulk regulome data as described above. Moreover, SCATE adaptively tunes the resolution for combining CREs (i.e., the CRE cluster number <italic>K</italic>) which is lacking in other methods. As the cell number in the population increases, the sparsity of the pseudo-cell will decrease and the optimal analysis resolution chosen by SCATE typically will increase.</p><p>For a heterogeneous cell population, we first group similar cells into clusters. SCATE is then applied to each cell cluster to reconstruct CRE activities by treating the cluster as a homogeneous cell population (Fig.. <xref rid="Fig2" ref-type="fig">2</xref>b). By default, SCATE uses model-based clustering [<xref ref-type="bibr" rid="CR26">26</xref>] to cluster cells, and the cluster number is automatically chosen by the Bayesian Information Criterion (BIC). Since one clustering method is unlikely to be optimal for all applications, we also provide users with the option to adjust the cluster number or provide their own cell clustering. SCATE can be run using user-specified cluster number or clustering results. For example, if users believe that the default clustering does not sufficiently capture the heterogeneity, they could increase the cluster number. In the most extreme case, if one sets the cluster number equal to the cell number, each cluster will become a single cell.</p><p>We note that pooling cells in each cluster to create a pseudobulk sample does not mean that the value of single-cell analysis is lost or that scATAC-seq can be replaced by bulk ATAC-seq or DNase-seq. This is because bulk ATAC-seq or DNase-seq analysis of a heterogeneous sample cannot separate different cell subpopulations or discover new cell types. Even if one could use cell sorting to separate cells in a sample by cell type and then apply bulk analysis to each cell type, the sorting relies on known cell type markers and therefore cannot discover new cell types. By contrast, a scATAC-seq experiment coupled with SCATE can identify and characterize different cell populations including potentially new cell types in a heterogeneous sample.</p></sec><sec id="Sec5"><title>Benchmark data</title><p>We compiled three benchmark datasets for method comparison. Dataset 1 consists of human scATAC-seq data from two different cell lines GM12878 (220 cells) and K562 (157 cells) generated by [<xref ref-type="bibr" rid="CR4">4</xref>]. For this dataset, ENCODE bulk DNase-seq data for GM12878 and K562 were used as the gold standard to evaluate signal reconstruction accuracy. Dataset 2 contains scATAC-seq data from human common myeloid progenitor (CMP) cells (637 cells) and monocytes (83 cells) obtained from [<xref ref-type="bibr" rid="CR27">27</xref>, <xref ref-type="bibr" rid="CR28">28</xref>]. We also obtained bulk ATAC-seq data from human CMP and monocytes generated by [<xref ref-type="bibr" rid="CR28">28</xref>] and used them as gold standard. Dataset 3 consists of mouse scATAC-seq data from brain (3321 cells) and thymus (7775 cells) generated by [<xref ref-type="bibr" rid="CR29">29</xref>]. For evaluation, the ENCODE bulk DNase-seq data for mouse brain and thymus were used as gold standard. In all evaluations, we removed the test cell types from the BDDB before running SCATE in order to avoid using the same bulk regulome data in both SCATE model fitting and performance evaluation.</p><p>For method evaluation, ideally one would like to have a gold standard for each single cell. However, single-cell resolution gold standard is difficult to obtain. For this reason, our method evaluation primarily relied on comparing scATAC-seq signals reconstructed from a single cell or by pooling multiple cells to bulk DNase-seq or ATAC-seq signals. In this regard, one may view single cells as random samples from a cell population, and the bulk signal characterizes cells&#x02019; mean behavior in the cell population. Although each cell is not exactly the same as the population mean, its behavior should fluctuate around the mean. Moreover, one should expect that the pseudobulk signal obtained by pooling an increasing number of cells should become increasingly more similar to the true bulk signal.</p></sec><sec id="Sec6"><title>Analysis of a homogeneous cell population - a demonstration</title><p>We first demonstrate SCATE analysis of a homogeneous cell population using the GM12878 and K562 data (Dataset 1) as an example. It should be pointed out that &#x0201c;homogeneous&#x0201d; is a relative concept rather than an absolute one since one can always define cell subtypes in a cell population by computationally grouping cells into clusters and subclusters at different granularity levels. In this study, &#x0201c;homogeneous&#x0201d; is technically defined as the finest granularity level for which we were able to obtain the corresponding bulk gold standard regulome data for method evaluation. We use this technical definition for two reasons. First, even if a test cell type may potentially be decomposed further into multiple cell subtypes, we could not conduct the benchmark analysis at the cell subtype level if the gold standard bulk regulome data for those cell subtypes are unavailable and the true subtype label of each cell is unknown. Second, the primary goal of our analysis of a homogeneous cell population is to serve as a bridge to help readers understand how SCATE would analyze each cell cluster in a heterogeneous cell population. Our working definition of &#x0201c;homogeneous&#x0201d; is sufficient to meet this need.</p><p>In this section, we applied SCATE to GM12878 and K562 separately. For each cell type, we randomly sampled <italic>n</italic> (<italic>n</italic>= 1, 5, 10, 25, 50, 100, etc.) cells and pooled their sequence reads together to run SCATE. CRE activities reconstructed by SCATE were compared with their activities measured by bulk DNase-seq in the corresponding cell type.</p><p>Figure&#x000a0;<xref rid="Fig3" ref-type="fig">3</xref> shows the normalization function <italic>h</italic><sub><italic>j</italic></sub>(.) learned by SCATE for normalizing scATAC-seq and the BDDB bulk DNase-seq data. Here, each scatter plot corresponds to a pooled scATAC-seq sample. Different plots represent different cell numbers or cell types. In these plots, each data point is a low-variability CRE with nearly constant activity across BDDB samples. For each CRE, the read count in the pooled scATAC-seq sample or the bulk ATAC-seq sample (<italic>Y</italic>-axis) versus the CRE&#x02019;s baseline mean activity in BDDB DNase-seq data (<italic>X</italic>-axis) is shown. The red curve is the SCATE-fitted function (<inline-formula id="IEq4"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\phantom {\dot {i}\!}e^{h_{j}(.)}$\end{document}</tex-math><mml:math id="M10"><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>.</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq4.gif"/></alternatives></inline-formula>) for modeling technical biases in scATAC-seq. Overall, the scATAC-seq read counts were positively correlated with CREs&#x02019; baseline activities at these low-variability CREs, and the SCATE-fitted normalization functions were able to capture the systematic relationship (i.e., technical biases) between the scATAC-seq and bulk DNase-seq data. Besides scATAC-seq, we also tested SCATE&#x02019;s normalization algorithm in bulk data. Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S3 shows the SCATE-fitted function (<inline-formula id="IEq5"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\phantom {\dot {i}\!}e^{h_{j}(.)}$\end{document}</tex-math><mml:math id="M12"><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>.</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq5.gif"/></alternatives></inline-formula>) for normalizing bulk ATAC-seq data in three different cell types to the BDDB bulk DNase-seq data. The normalization functions fitted by SCATE were again able to capture the systematic relationship in the observed data, further demonstrating the effectiveness of our approach for modeling technical biases.
<fig id="Fig3"><label>Fig. 3</label><caption><p>Normalization of scATAC-seq and bulk DNase-seq data. The scATAC-seq read counts versus baseline mean activities along with their Pearson correlation are shown for low-variability CREs in GM12878 (top panel) and K562 (bottom panel). Each blue dot is a low-variability CRE, defined as a CRE with almost constant activity across diverse cell types in BDDB bulk DNase-seq samples. Different plots correspond to analyses based on pooling different number of cells. In each plot, the red curve is the technical bias function fitted by SCATE</p></caption><graphic xlink:href="13059_2020_2075_Fig3_HTML" id="MO3"/></fig></p><p>Figure&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref> shows the number of CRE clusters adaptively chosen by SCATE. For each cell type, there are four plots corresponding to SCATE analyses by pooling different number of cells, with the cell number <italic>n</italic> shown on top of each plot. For each <italic>n</italic>, <italic>n</italic> cells were randomly sampled from the scATAC-seq dataset and pooled. SCATE was applied to the pooled data to automatically choose the CRE cluster number. This procedure was repeated ten times. The histogram shows the empirical distribution of the cluster number chosen by SCATE in these ten independent cell samplings without using any information from the gold standard bulk DNase-seq. As a benchmark, we also ran SCATE by manually setting the CRE cluster number <italic>K</italic> to different values. For each <italic>K</italic>, we computed the Pearson correlation between the SCATE-estimated CRE activities in scATAC-seq and the gold standard CRE activities in bulk DNase-seq. The dots in each plot show the correlation coefficients for different <italic>K</italic>s, also averaged across the ten independent cell samplings. The dot with the largest correlation coefficient corresponds to the true optimal cluster number. In real applications, this true optimal cluster number would be unknown because one would not have the bulk DNase-seq as the gold standard to help with choosing <italic>K</italic>.
<fig id="Fig4"><label>Fig. 4</label><caption><p>Adaptive tuning of analysis resolution. The number of CRE clusters automatically chosen by SCATE via cross-validation (histogram) is compared with the true optimal CRE cluster number determined by external information from the gold standard bulk DNase-seq data (dots). Different plots correspond to different cell types and pooled cell number. In each plot, the histogram shows the CRE cluster number chosen by SCATE in 10 independent cell samplings. The dots show the true correlation between the gold standard bulk DNase-seq signal and the SCATE-reconstructed scATAC-seq signal (both at log-scale) at each CRE cluster number, averaged across the 10 cell samplings. The dot with the highest correlation is the true optimal cluster number</p></caption><graphic xlink:href="13059_2020_2075_Fig4_HTML" id="MO4"/></fig></p><p>Figure&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref> shows that the CRE cluster number automatically chosen by SCATE (histogram) typically was close to the true optimal cluster number (the dot with the highest correlation). For instance, for analyzing a single GM12878 cell, the cluster number chosen by SCATE had its mode at 1250, and the true optimal cluster number was 2500. For analyzing 220 GM12878 cells, the cluster number chosen by SCATE had its mode at 521820, and the true optimal cluster number was also 521820.</p><p>Figure&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref> also shows that, as the cell number increases, both the true optimal CRE cluster number and the cluster number chosen by SCATE also increase. Increasing the number of CRE clusters implies that the average number of CREs in each CRE cluster will decrease because the total number of input CREs is fixed. Thus, SCATE adaptively changes analysis resolution: as more data are available for each CRE, SCATE gradually decreases the number of CREs in each cluster for information sharing. This allows SCATE to maximally retain CRE-specific information.</p><p>Figure&#x000a0;<xref rid="Fig5" ref-type="fig">5</xref> compares SCATE-reconstructed scATAC-seq signal with bulk DNase-seq signal in GM12878 and K562 in an example genomic region. The figure has six columns corresponding to different cell types and different pooled cell numbers. For benchmark purpose, the figure also compares SCATE with a number of other methods. The data are displayed at a 200 bp non-overlapping genomic window resolution. Here &#x0201c;Raw reads&#x0201d; displays the scATAC-seq read count pooled across cells for each 200 bp genomic window. &#x0201c;Binary&#x0201d; converts the 200 bp window read counts in each cell to a binary accessibility vector and then adds up the binary accessibility vectors across cells. Note that the raw read count approach is also used by Dr.seq2 and scABC to characterize CRE activities in single cells, but only in peak regions detected from the scATAC-seq data. The binary approach is also used by Cicero, Scasat, cisTopic, Destin, and PRISM to characterize CRE activities in peak regions. Since different implementations of a method may lead to variable method performance [<xref ref-type="bibr" rid="CR30">30</xref>], we also displayed the signals obtained using these existing methods except for PRISM for which we were not able to modify its code to export the binary accessibility matrix (PRISM does not report binary accessibility as it is only used as an intermediate step to compute cell distances). Unlike these existing methods, the &#x0201c;Raw reads&#x0201d; and &#x0201c;Binary&#x0201d; methods implemented by us processed all genomic windows rather than only peak regions. ChromVAR, SCRAT, and BROCKMAN only analyze and report aggregated CRE pathway activities rather than activities of individual CREs. Thus, they cannot be compared here. However, for our previously developed SCRAT, we were able to modify the codes to estimate CRE activities by directly using pathway activities. This results in three methods, &#x0201c;SCRAT 500 CRE cluster,&#x0201d; &#x0201c;SCRAT 1000 CRE cluster,&#x0201d; and &#x0201c;SCRAT 2000 CRE cluster,&#x0201d; shown in the figure. Here, CREs were clustered into 500, 1000, or 2000 clusters as in SCRAT using the bulk DNase-seq data in BDDB. For each CRE cluster, the average normalized scATAC-seq read count across all CREs in the cluster was calculated. It was then assigned back to each CRE in the cluster to represent the estimated CRE activity. The &#x0201c;Raw reads&#x0201d; method may be viewed as a special case of the &#x0201c;SCRAT CRE cluster&#x0201d; method when each genomic window is viewed as a CRE and each CRE forms a CRE cluster by itself (i.e., the number of CRE clusters is equal to the total number of CREs, and each cluster only contains one CRE). &#x0201c;Average DNase-seq&#x0201d; shows the average normalized read count profile of bulk DNase-seq samples in BDDB. It reflects CRE&#x02019;s baseline mean activity.
<fig id="Fig5"><label>Fig. 5</label><caption><p>Comparison of different methods in an example genomic region. Each row is a method, each column corresponds to a different cell type or pooled cell number. All columns show the same genomic region. The blue boxes highlight two CREs. The left CRE occurs in both GM12878 and K562. It cannot be detected by Raw reads, Binary and SCRAT CRE cluster methods in a single cell, but can be detected by Average DNase-seq and SCATE. The right CRE is K562-specific. It cannot be detected by Average DNase-seq but can be detected by SCATE</p></caption><graphic xlink:href="13059_2020_2075_Fig5_HTML" id="MO5"/></fig></p><p>Figure&#x000a0;<xref rid="Fig5" ref-type="fig">5</xref> shows that SCATE-reconstructed scATAC-seq signals accurately captured the variation of CRE activities in bulk DNase-seq across different genomic loci and different cell types, whereas CRE activities estimated using raw read counts, binarized chromatin accessibility, or SCRAT CRE cluster methods all failed to accurately capture the bulk DNase-seq landscape. Interestingly, SCATE was able to use scATAC-seq data from one single cell to accurately estimate CRE activities in bulk DNase-seq. By contrast, the raw read count and binary accessibility methods both failed, likely due to data sparsity (e.g., see regions in blue boxes). The SCRAT CRE cluster method also failed, likely because (1) it assigns the same activity to all CREs in the same CRE cluster and ignores CRE-specific behaviors, and (2) it does not adaptively tune the analysis resolution as in SCATE to maximally retain CRE-specific signals. While it is also possible that signals in a single cell do not necessarily need to look like the bulk signal due to cell heterogeneity and hence explaining why signals generated by Raw reads, Binary, and CRE cluster methods in a single cell were different from the bulk signal, Fig.&#x000a0;<xref rid="Fig5" ref-type="fig">5</xref> shows that SCATE also outperformed these methods when pooling multiple cells into pseudobulk samples (e.g., pooling 25 and 100 cells), suggesting that the better performance of SCATE is real. The &#x0201c;Average DNase-seq&#x0201d; approach produced relatively continuous signals and captured some variation across genomic loci in the GM12878 and K562 bulk DNase-seq data. However, it was unable to capture cell-type-specific signals, such as those shown in the blue boxes.</p></sec><sec id="Sec7"><title>Analysis of a homogeneous cell population - a systematic evaluation</title><p>Next, we systematically evaluated SCATE and the other methods in all three benchmark datasets by treating the six test cell types as six homogeneous cell populations. The evaluation was based on the correlation with gold standard bulk regulome data, peak calling performance using reconstructed signals, and ability to predict transcription factor binding sites (TFBSs).</p><p>In the first evaluation, we computed the Pearson correlation between the scATAC-seq signals reconstructed by each method and the gold standard bulk signals across all CREs. As one example, Fig.&#x000a0;<xref rid="Fig6" ref-type="fig">6</xref>a and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S4A show the results based on pooling scATAC-seq data from 10 GM12878 cells. There are multiple methods that use the raw read counts and binary methods. For clarity of display, in this and all other analyses below, only the &#x0201c;Raw reads&#x0201d; and &#x0201c;Binary&#x0201d; methods implemented by us are shown in the main figures (e.g., Fig.&#x000a0;<xref rid="Fig6" ref-type="fig">6</xref>), and the results from the other raw counts and binary methods are shown in supplementary figures (e.g., Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S4A). Among all methods, SCATE showed the highest correlation with the bulk gold standard. We performed the same analysis on all six test cell types by pooling different cell numbers. For each cell number, we repeated the analysis ten times using ten independent cell samplings. The median performance of the ten analyses was then compared. Figure&#x000a0;<xref rid="Fig6" ref-type="fig">6</xref>b and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S4B show that SCATE consistently outperformed all the other methods and showed the strongest correlation with the bulk gold standards in all test data. When the pooled cell number was small, the improvement of SCATE over many methods was substantial. For instance, for the analysis of one single monocyte cell, the correlation was 0.01&#x02013;0.22 for the different implementations of raw reads and binary methods. It was 0.57, 0.57, and 0.57 for SCRAT 500, 1000, and 2000 CRE cluster methods, respectively. For SCATE, it was 0.67, representing an improvement of 18 &#x0223c;6700% over the other methods. Of note, the Average DNase-seq method performed relatively well in this evaluation when the cell number was small. However, as we will show later, the average DNase-seq profile cannot predict changes in CRE activity between different cell types, but SCATE can.
<fig id="Fig6"><label>Fig. 6</label><caption><p>Correlation between reconstructed and true CRE activities. <bold>a</bold> Scatterplots showing true bulk CRE activities vs. CRE activities estimated by different methods in an analysis that pools 10 GM12878 cells. In this analysis, both activities are at log-scale. <bold>b</bold> The correlation between the scATAC-seq reconstructed and true bulk regulome for different methods. Each plot corresponds to a test cell type. In each plot, the correlation is shown as a function of the pooled cell number</p></caption><graphic xlink:href="13059_2020_2075_Fig6_HTML" id="MO6"/></fig></p><p>In the second evaluation, we performed peak calling using scATAC-seq signals reconstucted by SCATE and other methods. Peak calling is a common task in DNase-seq or ATAC-seq data analyses. Its objective is to find genomic regions with significantly enriched signals. We implemented a peak calling algorithm using a moving average approach (see Methods) and applied it to signals reconstructed by SCATE, Raw reads, Binary, SCRAT CRE cluster, and Average DNase-seq. For the other existing raw reads and binary methods, we used their default peak calling methods to call peaks. In addition, we also performed peak calling by applying MACS2 [<xref ref-type="bibr" rid="CR19">19</xref>] to the pseudobulk sample we obtained by pooling cells. The peak calling performance of each method was evaluated using the sensitivity versus false discovery rate (FDR) curve, where the &#x0201c;truth&#x0201d; was defined by the peaks called from the bulk gold standard data. Here, sensitivity is the proportion of true bulk peaks discovered by scATAC-seq, and FDR is the proportion of scATAC-seq peaks that are false (i.e., not found in bulk peaks). As one example, Fig.&#x000a0;<xref rid="Fig7" ref-type="fig">7</xref>a and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S5A compare the sensitivity-FDR curves of different methods when they were applied to the pooled scATAC-seq data from 25 GM12878 cells. For each curve, we computed the area under the curve (AUC). Fig.&#x000a0;<xref rid="Fig7" ref-type="fig">7</xref>b and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S5B systematically compare the AUCs of all methods in all six test cell types. In each plot, the analyses were run by pooling different numbers of cells, and the median AUC from 10 independent cell samplings was plotted as a function of the cell number. Once again, SCATE showed the best overall peak calling performance. When the cell number was small, the improvement was substantial. For analyzing one monocyte cell, for example, the AUC of SCATE was 0.4, whereas the AUCs for the other methods (except for Average DNase-seq) were all below 0.21. Thus, SCATE improved over these methods by 90% or more.
<fig id="Fig7"><label>Fig. 7</label><caption><p>Peak calling performance. <bold>a</bold> The sensitivity versus FDR curve is shown for different peak calling methods in an analysis that pools 25 GM12878 cells. <bold>b</bold> The area under the sensitivity-FDR curve (AUC) is shown as a function of pooled cell number for different methods. Each plot corresponds to a different test cell type</p></caption><graphic xlink:href="13059_2020_2075_Fig7_HTML" id="MO7"/></fig></p><p>In the third evaluation, we used signals reconstructed by each method to predict TFBSs. We evaluated 28 TFs in GM12878 and 29 TFs in K562 (Additional file&#x000a0;<xref rid="MOESM3" ref-type="media">3</xref>: Table S2). As gold standard, we collected ChIP-seq peaks for these TFs from the ENCODE [<xref ref-type="bibr" rid="CR15">15</xref>]. For the other cell types, we did not find TF ChIP-seq data suitable for evaluation. Therefore, our TFBS prediction analysis was focused on GM12878 and K562. To predict TFBSs of a TF, we mapped its motif sites in the genome using CisGenome [<xref ref-type="bibr" rid="CR31">31</xref>]. Genomic windows overlapping with motif sites were sorted based on their reconstructed scATAC-seq signals. Windows with the highest signals were labeled as predicted TFBSs (Fig.&#x000a0;<xref rid="Fig8" ref-type="fig">8</xref>a). Motif-containing windows that overlap with TF ChIP-seq peaks were viewed as gold standard true TFBSs. Based on this, we generated the sensitivity-FDR curve for each TF by gradually relaxing the TFBS calling cutoff. As one example, Fig.&#x000a0;<xref rid="Fig8" ref-type="fig">8</xref>b and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S6B show the sensitivity-FDR curves of different methods for predicting ELF1 binding sites by pooling scATAC-seq data from 25 GM12878 cells. For each TF and cell type, we performed this analysis using different cell numbers. For each cell number, the median area under the sensitivity-FDR curve (AUC) of 10 independent cell samplings was computed. As two examples, Fig.&#x000a0;<xref rid="Fig8" ref-type="fig">8</xref>c and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S6C show the AUCs for different methods as a function of pooled cell number for two TFs: ELF1 in GM12878 and JUND in K562. Finally, Fig.&#x000a0;<xref rid="Fig8" ref-type="fig">8</xref>d and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S6D show the average performance of all 28 TFs in GM12878 and 29 TFs in K562. In all these analyses, SCATE robustly outperformed all the other methods. The overall improvement was substantial (e.g., see K562 in Fig.&#x000a0;<xref rid="Fig8" ref-type="fig">8</xref>d and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S6D).
<fig id="Fig8"><label>Fig. 8</label><caption><p>TFBS prediction performance. <bold>a</bold> An illustration of TFBS prediction in an example genomic region. The region contains a genomic bin with ELF1 motif and high SCATE-reconstructed CRE activity in GM12878. The bin is predicted as a ELF1 binding site. The prediction can be validated by ELF1 ChIP-seq peak in GM12878. <bold>b</bold> An example sensitivity versus FDR curve for comparing different methods for predicting ELF1 TFBSs in an analysis that pools 25 GM12878 cells. <bold>c</bold> Two examples (ELF1 in GM12878 and JUND in K562) that illustrate the method comparison across different cell numbers. In each example, analyses are performed by pooling different numbers of cells. The median AUC under the sensitivity-FDR curve from 10 independent cell samplings is shown as a function of pooled cell number. <bold>d</bold> The averaged AUC across all TFs is shown as a function of pooled cell number in GM12878 and K562 respectively</p></caption><graphic xlink:href="13059_2020_2075_Fig8_HTML" id="MO8"/></fig></p></sec><sec id="Sec8"><title>Analysis of a heterogeneous cell population&#x02014;demonstration and systematic evaluation</title><p>The analyses of homogeneous cell populations provide a demonstration of the basic building block of SCATE. In reality, however, scATAC-seq is usually used to analyze a heterogeneous cell population consisting of multiple cell types where the cell type labels are unknown. To analyze such a heterogeneous cell population, one usually will first computationally cluster cells into relatively homogeneous subpopulations and then analyze each cell cluster as a homogeneous population. Due to inevitable noises, each cell cluster obtained in this way may not be pure. For example, while the majority of cells in a cell cluster may be of one cell type, the cluster may also contain cells from other cell types. As data analysts do not know cells&#x02019; true cell type labels, they can only treat all cells in the same cluster as if they were one cell type.</p><p>In order to see how SCATE tunes the analysis resolution when a cell cluster contains noise, we mixed K562 and GM12878 cells with different ratios (K562:GM12878 = 100%:0%, 80%:20%, 60%:40%) to mimic a cell cluster dominated by K562 cells but with different levels of noises introduced by GM12878 cells. The cross-validation procedure of SCATE was used to select the CRE cluster number as in Fig.&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref>. The analysis was repeated by setting the total cell number to 10 and 100 respectively. Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S7 shows that as the number of cells increased, the number of CRE clusters chosen by SCATE also increased regardless of the noise level. This indicates that when more reads are available by pooling more cells, SCATE will increase the analysis resolution. In most cases, the optimal CRE cluster numbers chosen by SCATE were largely consistent with the true optimal CRE cluster number determined by comparing scATAC-seq with bulk K562 DNase-seq. The only exception is when the noise level was high (K562:GM12878 = 60%:40% for cell number=100, where the optimal cluster number chosen by SCATE was bigger than the optimal cluster number based on bulk DNase-seq). In that case, however, one can argue that K562 bulk DNase-seq data may not reflect the chromatin profile of a mixture of K562 and GM12878 cells, whereas SCATE attempts to optimize the signal reconstruction for the cell cluster which is a mixture of K562 and GM12878 cells with almost equal proportion. Therefore, they try to measure different things and one should not expect that the optimal cluster number determined by K562 bulk DNase-seq will be consistent with the cluster number chosen by SCATE. This is different from Fig.&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref> where the cell type measured by bulk gold standard is consistent with the cells analyzed by SCATE.</p><p>Next, we demonstrate how a heterogeneous cell population would be analyzed in practice. We mixed GM12878 and K562 cells from Dataset 1 with different ratios to create synthetic samples with different heterogeneity levels. Each synthetic sample had 100 cells representing a mixture of GM12878 and K562 cells. The percentage of GM12878 cells was set to <italic>x</italic>= 10%, 30%, and 50%, respectively. For each percentage <italic>x</italic>, ten synthetic samples were created using independently sampled cells. The median performance of each method on the ten analyses was compared.</p><p>Each synthetic sample was analyzed by first clustering cells using the default cell clustering algorithm in SCATE. SCATE and other methods were then used to estimate CRE activities for each cell cluster. In all these analyses, we pretended that cells&#x02019; true cell type labels were unknown and did not use them. The number of cell clusters automatically determined by SCATE in these samples ranged from 2 to 5 (Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>a). Figure&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>b shows one example in which cells were grouped into 2 clusters.
<fig id="Fig9"><label>Fig. 9</label><caption><p>Analyses of a heterogeneous cell population. <bold>a</bold> Distribution of cell cluster numbers obtained by SCATE for synthetic samples with different cell mixing proportions. GM12878 and K562 cells are mixed at different proportions. For each mixing proportion, 10 synthetic samples are created and analyzed. <bold>b</bold> An example tSNE plot showing clustering of cells in a synthetic sample. <bold>c</bold> At each cell mixing proportion, the frequency that each cell type is detected in the 10 synthetic samples is shown. <bold>d</bold>&#x02013;<bold>f</bold> The correlation between the scATAC-seq reconstructed and true bulk regulome in <bold>d</bold> GM12878, <bold>e</bold> K562, and <bold>f</bold> GM12878 and K562 combined for different methods is shown as a function of cell mixing proportion (GM12878 cell percentage). <bold>g</bold> The peak calling AUC (GM12878 and K562 combined) vs. cell mixing proportion. <bold>h</bold> The TFBS prediction AUC (GM12878 and K562 combined) vs. cell mixing proportion. <bold>i</bold> The correlation between the scATAC-seq reconstructed and true bulk differential log-CRE activities is shown as a function of cell mixing proportion. <bold>j</bold>&#x02013;<bold>l</bold> Similar analyses in samples consisting of human CMP and monocyte cells, including <bold>j</bold> correlation between reconstructed and true bulk log-CRE activities, <bold>k</bold> peak calling AUC, and <bold>l</bold> correlation between predicted and true differential log-CRE activities. <bold>m</bold>&#x02013;<bold>o</bold> Similar analyses in samples consisting of mouse thymus and brain cells, including <bold>m</bold> correlation between reconstructed and true bulk log-CRE activities, <bold>k</bold> peak calling AUC, and <bold>l</bold> correlation between predicted and true differential log-CRE activities</p></caption><graphic xlink:href="13059_2020_2075_Fig9_HTML" id="MO9"/></fig></p><p>After running all methods, in order to evaluate whether the analysis can discover the true biology, we annotated each cell cluster using cells&#x02019; true cell type labels. Each cluster was annotated based on its dominant cell type. A cell cluster was labeled as &#x0201c;predicted GM12878&#x0201d; if over 70% of cells in the cluster were indeed GM12878 cells. Similarly, a cell cluster with &#x02265;&#x02009;70% K562 cells was labeled as &#x0201c;predicted K562&#x0201d;. All other clusters were labeled as &#x0201c;ambiguous.&#x0201d; For a given sample, if at least one cell cluster was labeled as &#x0201c;predicted cell type X&#x0201d; (X = GM12878 or K562), we say that cell type X was detected. Based on this definition, both GM12878 and K562 can be detected in all samples (Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>c). Note that one cell type may be identified by multiple cell clusters. Given the cell type annotation, we then compared the regulome of each cell type reconstructed by SCATE and other methods. Since all methods used the same cell clustering results, the comparison of their signal reconstruction ability is a fair comparison. We conducted four types of comparisons.</p><p>First, we asked whether the regulome reconstructed by each method for each predicted cell type can accurately recover the cell type&#x02019;s true regulome measured by the gold standard bulk data. Take GM12878 as an example. For each cell cluster predicted as GM12878, the Pearson correlation between the cluster&#x02019;s reconstructed scATAC-seq signal and the gold standard bulk GM12878 DNase-seq data was computed. If a sample had two or more cell clusters predicted as GM12878, each cluster was analyzed separately. The median correlation of all such clusters in ten independent synthetic samples is shown in Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>d and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S8A. SCATE again performed the best. When the proportion of GM12878 cells in a sample was small, the improvement by SCATE was larger. Figure&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>e and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S8B show the same analysis for K562, but the performance was shown as a function of GM12878 cell proportion. Figure&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>f and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S8C show the combined results. Here, at each cell mixing proportion, the median scATAC-bulk correlation of all cell clusters predicted either as GM12878 or K562 was shown. In all these analyses, SCATE consistently performed the best.</p><p>Second, we conducted peak calling and evaluated each method&#x02019;s ability to recover true peaks in each cell type. Here, the truth was defined as peaks called from the gold standard bulk data, and the evaluation was conducted similar to Fig.&#x000a0;<xref rid="Fig7" ref-type="fig">7</xref>. Figure&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>g and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S8D show the median AUC of all cell clusters predicted either as GM12878 or K562 as a function of cell mixing proportion. SCATE robustly outperformed the other methods.</p><p>Third, we compared different methods in terms of their ability to predict TFBSs. TFBS prediction and evaluation were performed similar to Fig.&#x000a0;<xref rid="Fig8" ref-type="fig">8</xref>. The results are shown in Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>h and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S8E, in which the median AUC for each method is plotted as a function of cell mixing proportion. SCATE produced the best prediction accuracy.</p><p>Last but not least, we applied different methods to predict differential CRE activities between different cell types, which is crucial for characterizing the regulatory landscape of a heterogeneous sample. Note that if one views scATAC-seq as a tool for studying cell heterogeneity, then a good analysis method should have the ability to accurately capture differences among cells. Importantly, since differences between cell types are a special case of cell heterogeneity, a good method should be able to keep cell type differences when comparing two cells or two pseudobulk samples from two different cell types. Here, we collected all pairs of cell clusters that were predicted as two different cell types (i.e., one cluster was &#x0201c;predicted GM12878&#x0201d; and the other cluster was &#x0201c;predicted K562&#x0201d;; ambiguous cell clusters were excluded). For each such pair, we computed the difference of reconstructed CRE activities between the two cell clusters. We then compared this predicted difference with the true differential CRE activities derived from the gold standard bulk DNase-seq data for GM12878 and K562. The Pearson correlation between the predicted and true differential signals was calculated. As one example, Fig.&#x000a0;<xref rid="Fig10" ref-type="fig">10</xref> and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S9 show the results for a cell cluster pair in a synthetic sample in which 30% of cells was GM12878. SCATE best recovered the differential CRE activities (correlation = 0.43). Figure&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>i and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S8F show the median correlation across ten independent synthetic samples at each cell mixing proportion. Once again, SCATE performed the best.
<fig id="Fig10"><label>Fig. 10</label><caption><p>An example of predicting differential CRE activities. Scatterplots showing true bulk differential log-CRE activities vs. differential log-CRE activities estimated by different methods in an analysis of a synthetic sample consisting of 30 GM12878 and 70 K562 cells</p></caption><graphic xlink:href="13059_2020_2075_Fig10_HTML" id="MO10"/></fig></p><p>In the above analyses, the Average DNase-seq method completely failed for predicting differential signals between two cell types (correlation = 0) (Figs.&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>i, and <xref rid="Fig10" ref-type="fig">10</xref>), even though it performed relatively well for estimating CRE activities within one cell type, and peak calling and TFBS prediction in one cell type (Figs.&#x000a0;<xref rid="Fig6" ref-type="fig">6</xref>, <xref rid="Fig7" ref-type="fig">7</xref>, <xref rid="Fig8" ref-type="fig">8</xref>, <xref rid="Fig9" ref-type="fig">9</xref>f&#x02013;h). Similarly, each of the other methods may perform well in some datasets or analyses but not in others. SCATE is the only method that robustly performed the best in all our analyses.</p><p>Similar to GM12878 and K562 (Dataset 1), we also constructed heterogeneous cell populations using the other two datasets (Datasets 2 and 3) and used them to evaluate different methods. The results are shown in Figure&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>j&#x02013;o and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figures S8G-L and S10. For these two datasets, we did not perform TFBS prediction due to lack of gold standard ChIP-seq data. For estimating CRE activities (Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>j, m, Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S8G,J), peak calling (Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>k, n, Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S8H,K), and predicting differential CRE activities (Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>l, o, Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S8I,L), SCATE again outperformed all the other methods. In many cases, the improvement was substantial (e.g., Fig.&#x000a0;<xref rid="Fig9" ref-type="fig">9</xref>k, l, n, o, Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S8).</p></sec><sec id="Sec9"><title>Example 1: Analysis of scATAC-seq data from human hematopoietic differentiation</title><p>To further demonstrate and evaluate SCATE in a more realistic setting, we analyzed a scATAC-seq dataset generated by [<xref ref-type="bibr" rid="CR27">27</xref>] which consists of 1920 cells from 8 human hematopoietic cell types for which corresponding bulk ATAC-seq data are available. These cell types include hematopoietic stem cell (HSC), multipotent progenitor (MPP), lymphoid-primed multipotent progenitor (LMPP), common myeloid progenitor (CMP), common lymphoid progenitor (CLP), granulocyte-macrophage progenitor (GMP), megakaryocyte-erythrocyte progenitor (MEP), and monocyte (Mono). In this dataset, the true cell type label of each cell was known since cells were obtained by cell sorting. However, they were not used in our SCATE analyses so that our results reflect how data would be analyzed in reality. The true cell type labels were only used after the analysis to evaluate methods. Figure&#x000a0;<xref rid="Fig11" ref-type="fig">11</xref>a shows the tSNE [<xref ref-type="bibr" rid="CR32">32</xref>] plot of all cells color-coded by their true cell types. In the plot, different cell types were distributed along three major differentiation lineages (myeloid: HSC &#x02192;<italic>MPP</italic>&#x02192;(CMP or LMPP) &#x02192;<italic>GMP</italic>&#x02192;Mono; erythroid: HSC &#x02192;<italic>MPP</italic>&#x02192;<italic>CMP</italic>&#x02192;MEP; lymphoid: HSC &#x02192;<italic>MPP</italic>&#x02192;<italic>LMPP</italic>&#x02192;CLP), which are consistent with known biology. For method evaluation, we analyzed all cells together as a heterogeneous cell population and pretended that the cell type labels were unknown. We also downloaded and processed bulk ATAC-seq data for these 8 cell types from [<xref ref-type="bibr" rid="CR28">28</xref>] and used them as the gold standard to assess regulome reconstruction accuracy.
<fig id="Fig11"><label>Fig. 11</label><caption><p>Analysis of human hematopoietic differentiation cell types. <bold>a</bold> tSNE plot showing cells color-coded by their true cell types. <bold>b</bold> tSNE plot showing cells color-coded by their predicted cell types. Using the default setting, SCATE grouped cells into 14 clusters (numbers in the plot indicate cluster centers). The clusters that can be unambiguously linked to a cell type are color-coded by cell type. <bold>c</bold> Similar to <bold>b</bold>, but cells are clustered using user-specified cluster number (38 clusters). <bold>d</bold>&#x02013;<bold>f</bold> Regulome reconstruction performance of different methods in the default analysis, including <bold>d</bold> correlation between reconstructed and true bulk log-CRE activities, <bold>e</bold> peak calling AUC, and <bold>f</bold> correlation between predicted and true differential log-CRE activities. <bold>g</bold>&#x02013;<bold>i</bold> Regulome reconstruction performance using user-specified cluster number (38 clusters), including <bold>g</bold> correlation between reconstructed and true bulk log-CRE activities, <bold>h</bold> peak calling AUC, and <bold>i</bold> correlation between predicted and true differential log-CRE activities. <bold>j</bold> Comparison of different methods in an example genomic region in HSC cell cluster in the default analysis</p></caption><graphic xlink:href="13059_2020_2075_Fig11_HTML" id="MO11"/></fig></p><p>Using its default cell clustering method, SCATE identified 14 cell clusters. To evaluate the performance of this unsupervised analysis for recovering true biology, we first assigned a cell type label for each cluster. A cluster was annotated as &#x0201c;predicted cell type X&#x0201d; if the cluster contained at least two cells and the true cell type label of &#x02265; 70% cells from the cluster was cell type X. Clusters that cannot be annotated using this criterion were labeled as ambiguous. In this way, we were able to unambiguously annotate 9 clusters. Since multiple clusters may be annotated with the same cell type, these 9 annotated clusters corresponded to a total of 6 cell types (Fig.&#x000a0;<xref rid="Fig11" ref-type="fig">11</xref>b). For these 9 clusters, one can evaluate signal reconstruction accuracy because the bulk ATAC-seq data for the annotated cell type was available. Each cluster was treated as a homogeneous cell population by SCATE and other methods in our analysis (as one would do in real applications), even though the cluster actually may not be pure and may contain cells from more than one cell types. Figure&#x000a0;<xref rid="Fig11" ref-type="fig">11</xref>d and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S11A compare the Pearson correlation between the gold standard bulk signal and the CRE activities reconstructed from scATAC-seq by different methods. Each boxplot contains 9 data points corresponding to the 9 cell clusters. Figure&#x000a0;<xref rid="Fig11" ref-type="fig">11</xref>e and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S11B compare the peak calling performance (AUC under the sensitivity-FDR curve). Figure&#x000a0;<xref rid="Fig11" ref-type="fig">11</xref>f and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S11C compare the accuracy for predicting differential CRE activities between different cell types. Here, each data point in the boxplot is a pair of cell clusters annotated with two different cell types. The Pearson correlation between the gold standard bulk differential signal and differential signal reconstructed from scATAC-seq was computed and compared. In all these analyses, SCATE outperformed the other methods. Figure&#x000a0;<xref rid="Fig11" ref-type="fig">11</xref>j shows an example genomic region in a HSC cell cluster. SCATE most accurately reconstructed the bulk ATAC-seq signal in HSC.</p><p>SCATE provides users with the flexibility to specify their own cell cluster number or use their own cell clustering results. The software can reconstruct signals based on user-provided cell cluster number or clustering structure. For instance, suppose one is not satisfied with the default cell clustering and wants to increase the granularity of clustering to make each cluster smaller and more homogeneous, one can manually adjust the cluster number. To demonstrate, we increased the cell cluster number to 38. After increasing the cell cluster number, each cell cluster contained approximately 50 cells on average. After rerunning SCATE, 24 of the 38 cell clusters can be unambiguously annotated, identifying a total of 7 cell types (Fig.&#x000a0;<xref rid="Fig11" ref-type="fig">11</xref>c). As a comparison, the default analysis only unambiguously identified 6 cell types. For the unambiguously annotated cell clusters, Fig.&#x000a0;<xref rid="Fig11" ref-type="fig">11</xref>g&#x02013;i and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S11D-F compare the performance of different methods for reconstructing CRE activities, peak calling, and estimating differential CRE activities between different cell types. SCATE still delivered the best performance. Since the average cell cluster size became smaller, the performance of some methods decreased substantially in some analyses (e.g., the CRE reconstruction and peak calling accuracy for Raw reads and Binary in Fig.&#x000a0;<xref rid="Fig11" ref-type="fig">11</xref>g, h and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S11D, E). In these cases, the benefit from SCATE was even more obvious.</p></sec><sec id="Sec10"><title>Example 2: Analysis of 10x Genomics scATAC-seq data from human peripheral blood mononuclear cells (PBMC)</title><p>We also analyzed a scATAC-seq dataset generated from 10x Genomics platform by [<xref ref-type="bibr" rid="CR33">33</xref>] which consists of 10,027 human peripheral blood mononuclear cells. These cells were sorted into 5 cell types using magnetic-activated cell sorting: B cells, CD4+ T cells, CD8+ T cells, monocytes, and natural killer (NK) cells. Figure&#x000a0;<xref rid="Fig12" ref-type="fig">12</xref>a visualizes the data with true cell type labels color-coded. Consistent with known biology, CD4+ T cells, CD8+ T cells, and NK cells are closer to each other, whereas B cells and monocytes form more distinct clusters. Again, in order to illustrate how scATAC-seq data would be analyzed in reality, we pretended that cells&#x02019; true cell type labels are unknown when running SCATE and other methods. We downloaded and processed bulk ATAC-seq data for these cell types from [<xref ref-type="bibr" rid="CR28">28</xref>] and used them as the gold standard.
<fig id="Fig12"><label>Fig. 12</label><caption><p>Analysis of human PBMCs from the 10x Genomics platform. <bold>a</bold> tSNE plot showing cells color-coded by their true cell types. <bold>b</bold> tSNE plot showing cells color-coded by their predicted cell types. Using the default setting, SCATE grouped cells into 15 clusters (numbers in the plot indicate cluster centers). The clusters that can be unambiguously linked to a cell type are color-coded by cell type. <bold>c</bold> Similar to <bold>b</bold>, but cells are clustered using user-specified cluster number (100 clusters). <bold>d</bold>&#x02013;<bold>f</bold> Regulome reconstruction performance of different methods in the default analysis, including <bold>d</bold> correlation between reconstructed and true bulk log-CRE activities, <bold>e</bold> peak calling AUC, and <bold>f</bold> correlation between predicted and true differential log-CRE activities. <bold>g</bold>&#x02013;<bold>i</bold> Regulome reconstruction performance using user-specified cluster number (100 clusters), including <bold>g</bold> correlation between reconstructed and true bulk log-CRE activities, <bold>h</bold> peak calling AUC, and <bold>i</bold> correlation between predicted and true differential log-CRE activities. <bold>j</bold> Comparison of different methods in an example genomic region in B cell cluster in the default analysis</p></caption><graphic xlink:href="13059_2020_2075_Fig12_HTML" id="MO12"/></fig></p><p>Using its default cell clustering method, SCATE identified 15 cell clusters. To evaluate how this unsupervised analysis recovered true biology, we first computationally assigned a cell type label to each cell cluster using the same protocol as in Example 1&#x02019;s hematopoietic analysis. In this way, we were able to unambiguously annotate 11 clusters representing all 5 cell types (Fig.&#x000a0;<xref rid="Fig12" ref-type="fig">12</xref>b). For these 11 clusters, we evaluated signal reconstruction accuracy using the bulk ATAC-seq data of the annotated cell type. SCATE again outperformed the other methods in terms of Pearson correlation between the gold standard bulk signal and the CRE activities reconstructed from scATAC-seq (Fig.&#x000a0;<xref rid="Fig12" ref-type="fig">12</xref>d, Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig.S12A), peak calling performance (Fig.&#x000a0;<xref rid="Fig12" ref-type="fig">12</xref>e, Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S12B), and accuracy for predicting differential CRE activities between different cell types (Fig.&#x000a0;<xref rid="Fig12" ref-type="fig">12</xref>f, Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S12C). Figure&#x000a0;<xref rid="Fig12" ref-type="fig">12</xref>j shows an example genomic region in a B cell cluster. SCATE most accurately reconstructed the bulk ATAC-seq signal in B cells.</p><p>In the default analysis, the average number of cells in a cluster for the 11 annotated clusters was 852. Similar to Example 1, we also rerun the analysis by manually setting the cell cluster number to 100 to increase the granularity of clustering. This reduced the average number of cells in a cluster to 100. After running SCATE, we were able to unambiguously annotate 86 clusters corresponding to the 5 cell types (Fig.&#x000a0;<xref rid="Fig12" ref-type="fig">12</xref>c). Figure&#x000a0;<xref rid="Fig12" ref-type="fig">12</xref>g&#x02013;i and Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S12D-F show that SCATE still delivered the best overall performance.</p></sec></sec><sec id="Sec11" sec-type="discussion"><title>Discussions</title><p>In summary, SCATE provides a new tool for analyzing scATAC-seq data. Our analyses show that it robustly outperforms the existing methods for reconstructing activities of each individual CRE. In many cases, the gain can be substantial.</p><p>The main novelty of SCATE is its unique strategy to reconstruct CRE activities from sparse data by (1) integrating data from both similar CREs and cells, (2) leveraging the rich information provided by publicly available regulome data, and (3) adaptively optimizing the analysis resolution based on available data. Coupled with appropriate cell clustering, SCATE allows one to systematically characterize the regulatory landscape of a heterogeneous sample via unsupervised identification of cell subpopulations and reconstruction of their chromatin accessibility profile at the single CRE resolution.</p><p>Since many methods for clustering cells using scATAC-seq data have been developed (Additional file&#x000a0;<xref rid="MOESM1" ref-type="media">1</xref>: Table S1), cell clustering per se is not the focus of this article. In principle, the SCATE model may be coupled with any cell clustering method. While our implementation uses model-based clustering as the default, users are provided with the option to use their own cell clustering results as the input for SCATE. For example, cell clustering may be influenced by cell cycle which is not adjusted for in the default clustering method in SCATE. However, if users want to adjust for cell cycle and have performed their own cell clustering to do so, they could replace the default SCATE clustering with their own cell clustering. As another example, some recent studies suggest that distal regulatory elements such as enhancers may be more informative for clustering cells compared to proximal elements such as promoters [<xref ref-type="bibr" rid="CR21">21</xref>]. Although this information is not currently considered in our default cell clustering algorithm, users have the flexibility to replace the default SCATE cell clustering by cell clustering obtained from other tools (e.g., [<xref ref-type="bibr" rid="CR21">21</xref>]) that treat distal and proximal regulatory elements differently. Once cell clustering is given, SCATE will apply the same algorithm to estimate activities of all CREs regardless of whether they are proximal or distal. We note that the input CREs for SCATE are compiled from DNase-seq or ATAC-seq data which cover both proximal and distal elements. When we use these data to detect CREs, proximal and distal elements were not treated differently.</p><p>For estimating CRE activities, the default setting of SCATE takes a precompiled list of CREs and their clustering structure as input. These precompiled CREs and clusters are learned from a large number of DNase-seq samples representing diverse cell types in BDDB. As Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Figure S1 shows, the precompiled CREs in BDDB typically cover most of the CREs one would detect in a new dataset. The precompiled CRE clusters contain information about which CREs are correlated. The correlation itself does not tell one the actual activity of each CRE in a new scATAC-seq dataset. For example, knowing that CRE X, CRE Y, and CRE Z are correlated does not tell one whether they will have high activity or low activity in a new dataset. To infer CREs&#x02019; actual activity in scATAC-seq, one also needs to use the read count information from the scATAC-seq data. In SCATE, the prior information learned from BDDB about CRE correlations is combined with the observed read counts in scATAC-seq data to infer CRE activities. In this way, information about how CREs are correlated (but not about the actual activities of CREs) are transferred from the existing BDDB data to the new scATAC-seq data. The transferred correlation information is helpful for improving the estimation of CRE activities. For example, consider two scenarios: (1) CRE Z has 0 read, but all other CREs in the same cluster have non-zero read counts; (2) CRE Z has 0 read, and all other CREs in the same cluster have 0 read. Based on the knowledge that CREs in the same cluster tend to be co-activated, one can infer that CRE Z is more likely to be active in scenario (1) than in scenario (2). In other words, based on the read counts observed at the correlated CREs, the zero read count for CRE Z in scenario (1) is more likely to represent an inaccurate measurement, whereas the zero read count for CRE Z in scenario (2) more likely reflects its real low activity level.</p><p>A potential limitation of using our precompiled CRE list and clusters is that for a given version of BDDB, these lists will be fixed and remain the same for analyzing all new scATAC-seq datasets. A new scATAC-seq dataset may contain new CREs and new CRE correlation structures that may not be fully captured by our precompiled CRE list and clusters. For this reason, SCATE also provides functions to support users to compile their own CRE list and CRE clusters. Users can use these functions in two ways. In one way denoted as &#x0201c;SCATE(User Data),&#x0201d; one can compile CREs from their own scATAC-seq data (by clustering cells and detecting CREs in each cell cluster) and cluster CREs based on their own scATAC-seq data (using normalized CRE-read count matrix, where each row is a CRE and each column is a pseudobulk sample obtained by pooling cells in a cluster). In another way denoted as &#x0201c;SCATE(BDDB+User Data),&#x0201d; users can cluster cells into pseudobulk samples and add the pseudobulk samples obtained from their scATAC-seq data to BDDB to expand the database. One can then compile CREs and their clustering using the expanded BDDB. The difference among the default SCATE, SCATE(User Data) and SCATE(BDDB+User Data) is that (1) the default mode only uses existing data in BDDB to compile input CREs (thus it is also denoted as SCATE(BDDB)), (2) SCATE(User Data) does not use any information from BDDB, and (3) SCATE(BDDB+User Data) combines BDDB with users&#x02019; own data to compile CREs and hence uses both sources of information.</p><p>While SCATE(User Data) and SCATE(BDDB+User Data) provide users with the flexibility to compile dataset-specific CREs, we choose SCATE(BDDB) as the default mode of SCATE for two reasons. First, based on our own experience with real data, SCATE(BDDB) usually performs better than SCATE(User Data) (Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S13). This is likely because CREs and their clustering patterns compiled from diverse cell types in BDDB are more informative than those compiled from a limited number of cell types in a new scATAC-seq data. Second, SCATE(BDDB) and SCATE(BDDB+User Data) usually show similar performance, with SCATE(BDDB+User Data) being slightly better. Despite the slight loss of accuracy, SCATE(BDDB) is substantially easier to use. In order to use SCATE(BDDB+User Data), users have to download the DNase-seq data in BDDB and run CRE detection and clustering themselves which require extensive computation (it typically takes 1&#x02013;2 days in a computer with 20 cores (2.5 GHz CPU/core)). By contrast, in order to use SCATE(BDDB), one can skip these tedious and computation heavy steps and only download the precompiled CRE list and clustering. With these precompiled CREs and clusters, running SCATE only takes a few minutes per cell cluster.</p><p>In the future, the SCATE framework may be extended in multiple directions. For example, how should one account for the effects of cell cycles in scATAC-seq analysis remains an open problem. Addressing this problem requires robust methods to accurately infer cells&#x02019; phase in cell cycle using scATAC-seq data and systematic benchmark datasets and method evaluation. Both are non-trivial for scATAC-seq and are beyond the scope of this study. However, they are interesting topics for future research. As another example, our current implementation of SCATE is focused on identifying and characterizing cell subpopulations. A future direction is to extend this framework to other types of analyses such as pseudotime analysis [<xref ref-type="bibr" rid="CR34">34</xref>] to allow the study of CRE activities along continuous pseudotemporal trajectories. In the future, it is also useful to develop new methods that utilize the improved CRE estimation to more accurately reconstruct gene regulatory networks.</p><p>The basic framework adopted by SCATE to improve the analysis of sparse data by integrating multiple sources of information is general. In principle, a similar approach may also be used to analyze other types of single-cell epigenomic data such as single-cell DNase-seq or ChIP-seq, and possibly single-cell Hi-C [<xref ref-type="bibr" rid="CR35">35</xref>].</p></sec><sec id="Sec12"><title>Methods</title><sec id="Sec13"><title>Single-cell ATAC-seq data preprocessing</title><p>Single-cell ATAC-seq data for GM12878 and K562 cells were obtained from GEO (GSE65360) [<xref ref-type="bibr" rid="CR4">4</xref>]; single-cell ATAC-seq data for human hematopoietic cell types were obtained from GEO (GSE96769) [<xref ref-type="bibr" rid="CR27">27</xref>]; single-cell ATAC-seq data for mouse brain and thymus were obtained from GEO (GSE111586) [<xref ref-type="bibr" rid="CR29">29</xref>]. For each cell, paired-end reads were trimmed using the program provided by [<xref ref-type="bibr" rid="CR4">4</xref>] to remove adaptor sequences. Reads were then aligned to human (hg19) or mouse (mm10) genome using bowtie2 with parameter -X2000. This parameter retains paired reads with insertion up to 2000 base pairs (bps). PCR duplicates were removed using Picard (<ext-link ext-link-type="uri" xlink:href="http://broadinstitute.github.io/picard/">http://broadinstitute.github.io/picard/</ext-link>).</p><p>The 10x Genomics single-cell ATAC-seq data for human PBMC were downloaded from GEO (GSE129785) [<xref ref-type="bibr" rid="CR33">33</xref>]. The 10x Cell Ranger ATAC Software Suite were used to process reads and align them to human hg19 genome. All other analysis procedures were the same as the analysis of human hematopoietic cell types.</p></sec><sec id="Sec14"><title>Genome segmentation</title><p>Genome is segmented into 200 base pair (bp) nonoverlapping bins. Bins that overlap with ENCODE blacklist regions are excluded from subsequent analyses since their signals tend to be artifacts [<xref ref-type="bibr" rid="CR36">36</xref>].</p></sec><sec id="Sec15"><title>Bulk DNase-seq database (BDDB)</title><p>SCATE borrows information from large amounts of publicly available bulk DNase-seq data to improve scATAC-seq analysis. We compiled a database consisting of 404 human and 85 mouse DNase-seq samples obtained from the ENCODE. Take human as an example, we downloaded all ENCODE DNase-seq samples generated by the University of Washington [<xref ref-type="bibr" rid="CR15">15</xref>] in bam format. Files marked by ENCODE as low quality (marked as &#x0201c;extremely low spot score&#x0201d; or &#x0201c;extremely low read depth&#x0201d; by ENCODE) were filtered out. Technical replicates for each distinct cell type or tissue were merged into one sample. This has resulted in 404 DNase-seq samples representing diverse cell types (Additional file&#x000a0;<xref rid="MOESM4" ref-type="media">4</xref>: Table S3). Mouse samples were processed similarly (Additional file&#x000a0;<xref rid="MOESM5" ref-type="media">5</xref>: Table S4).</p></sec><sec id="Sec16"><title>Compiling cis-regulatory elements (CREs) using bulk data compendium</title><p>Given a species and a compendium of bulk regulome samples (e.g., DNase-seq samples in BDDB), SCATE systematically identifies CREs in the genome as follows. Let <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub> denote the raw read count of bin <italic>i</italic> in sample <italic>j</italic>. Let <italic>L</italic><sub><italic>j</italic></sub> be sample <italic>j</italic>&#x02019;s total read count divided by 10<sup>8</sup> (i.e., the library size in the unit of hundred million. For example, a sample with 200 million reads has <italic>L</italic><sub><italic>j</italic></sub>=2). We normalize the raw read counts by library size and log2-transform them after adding a pseudocount 1. This results in normalized data <inline-formula id="IEq6"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {y}_{i,j}=\log _{2}(y_{i,j}/L_{j}+1)$\end{document}</tex-math><mml:math id="M14"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>log</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq6.gif"/></alternatives></inline-formula>. Bin <italic>i</italic> is called a &#x0201c;signal bin&#x0201d; in sample <italic>j</italic> if (1) <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub>&#x02265;10, (2) <inline-formula id="IEq7"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {y}_{i,j} \geq 5$\end{document}</tex-math><mml:math id="M16"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02265;</mml:mo><mml:mn>5</mml:mn></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq7.gif"/></alternatives></inline-formula>, and (3) <inline-formula id="IEq8"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {y}_{i,j}$\end{document}</tex-math><mml:math id="M18"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq8.gif"/></alternatives></inline-formula> is at least five times (three times for mouse) larger than the background signal defined as the mean of <inline-formula id="IEq9"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {y}_{i,j}$\end{document}</tex-math><mml:math id="M20"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq9.gif"/></alternatives></inline-formula>s in the surrounding 100 kb region. The cutoffs for defining signal bins are used to filter out noisy genomic loci since including such loci will increase computational burden. For example, the CRE clustering below failed to run on our computer when we included all genomic bins in the analysis. We explored different choices of cutoffs that were computationally feasible on our computer and found that the cutoffs used above had good empirical performance compared to using looser or more stringent cutoffs (see details in Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S14 and Additional file&#x000a0;<xref rid="MOESM6" ref-type="media">6</xref>: Supplementary Note).</p><p>If a bin is a signal bin in at least one bulk sample, it is labeled as a &#x0201c;known CRE.&#x0201d; In this way, all genomic bins are labeled as either &#x0201c;known CREs&#x0201d; or &#x0201c;other bins.&#x0201d; 522,173 known CREs for human and 475,865 known CREs for mouse are identified using our bulk DNase-seq compendium. Locations of these CREs are stored in SCATE and provided as part of the software package. Saturation analysis shows that typically a new bulk sample from a new cell type only contributes a small fraction (0.013% for human and 0.18% for mouse) of new CREs to the known CRE list (Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S1A). In the three benchmark scATAC-seq datasets used in this article, datasets 1, 2, and 3 would only add 0.050%, 0.0013%, and 0.063% new CREs, respectively, to our known CRE list. For the human hematopoietic differentiation and PBMC datasets used in the last two &#x0201c;<xref rid="Sec2" ref-type="sec">Results</xref>&#x0201d; sections, the scATAC-seq dataset would only add 0.118% and 0.058% of new CREs to the known CRE list, respectively (Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S1B; the calculation was based on detecting CREs in each cell type separately and then adding the union of all CREs from all cell types in the scATAC-seq data to the known CRE list). This suggests that the majority of a new sample&#x02019;s regulome can be studied by analyzing the precompiled known CREs, which can save user&#x02019;s work on compiling and clustering their own CREs. In this article, SCATE is demonstrated using our precompiled known CRE list, as the performance curves and statistics do not change much by adding new CREs from each scATAC-seq dataset to the analysis.</p></sec><sec id="Sec17"><title>SCATE model for known CREs in a single cell</title><p>Consider scATAC-seq data from one single cell <italic>j</italic>. Given aligned sequence reads, SCATE will estimate activities of known CREs first. Let <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub> denote the observed read count for CRE <italic>i</italic> (<italic>i</italic>=1,&#x02026;,<italic>I</italic>) in cell <italic>j</italic>, and let <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> denote the unobserved true activity. Our goal is to infer the unobserved <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> from the observed data <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub>. We assume the following data generative model:
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \begin{aligned} &#x00026;\quad y_{i,j} \sim Poisson (L_{j} \mu^{sc}_{i,j}) \\ &#x00026;\quad \log(\mu^{sc}_{i,j}) = h_{j}(\log(\mu_{i,j}))\\ &#x00026;\quad \log(\mu_{i,j})=m_{i} + s_{i} \delta_{i,j} \\ &#x00026;\quad \boldsymbol{\delta}_{j} = \mathbf{X} \boldsymbol{\beta}_{j} \end{aligned}  $$ \end{document}</tex-math><mml:math id="M22"><mml:mtable><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0223c;</mml:mo><mml:mtext mathvariant="italic">Poisson</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:munderover><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:munderover><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b2;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="13059_2020_2075_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p><p>This model has three main components which will be explained below.
<list list-type="order"><list-item><p><italic>Model for true activity</italic>. The unobserved <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> is modeled as log(<italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub>)=<italic>m</italic><sub><italic>i</italic></sub>+<italic>s</italic><sub><italic>i</italic></sub><italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub>. Here <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub> represent CRE <italic>i</italic>&#x02019;s baseline mean activity and standard deviation (SD). They are used to model the locus-specific but cell-type-independent baseline behavior of each CRE (i.e., the locus effects observed in Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>e). Since these locus-specific effects cannot be reliably learned using sparse data or data from one cell type, we learn them using the bulk data from diverse cell types in our bulk regulome data compendium (see below). Once they are learned, <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub> are treated as known. The unknown <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub> describes CRE <italic>i</italic>&#x02019;s cell-specific activity after removing locus effects (i.e., <inline-formula id="IEq10"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\delta _{i,j} = \frac {\log (\mu _{i,j})-m_{i}}{s_{i}}$\end{document}</tex-math><mml:math id="M24"><mml:msub><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq10.gif"/></alternatives></inline-formula>). Due to data sparsity, accurately estimating <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub> using the observed data from only one CRE in one cell is difficult. Thus, we impose additional structure on <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub>s to allow co-activated CREs to share information to improve the estimation. We group CREs into <italic>K</italic> clusters based on their co-activation patterns across cell types (see below). We assume that CREs in the same cluster share the same <italic>&#x003b4;</italic>. Mathematically, let <bold><italic>&#x003b4;</italic></bold><sub><italic>j</italic></sub>=(<italic>&#x003b4;</italic><sub>1,<italic>j</italic></sub>,&#x02026;,<italic>&#x003b4;</italic><sub><italic>I</italic>,<italic>j</italic></sub>)<sup><italic>T</italic></sup> be a column vector that contains <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub>s from all CREs in cell <italic>j</italic>. Let <bold>X</bold> be a <italic>I</italic>&#x000d7;<italic>K</italic> cluster membership matrix. Each entry of this matrix <italic>x</italic><sub><italic>ik</italic></sub> is a binary variable: <italic>x</italic><sub><italic>ik</italic></sub>=1 if CRE <italic>i</italic> belongs to cluster <italic>k</italic>, and <italic>x</italic><sub><italic>ik</italic></sub>=0 otherwise. Let <italic>&#x003b2;</italic><sub><italic>k</italic>,<italic>j</italic></sub> denote the common activity of all CREs in cluster <italic>k</italic>. Arrange <italic>&#x003b2;</italic><sub><italic>k</italic>,<italic>j</italic></sub>s into a column vector <bold><italic>&#x003b2;</italic></bold><sub><italic>j</italic></sub>=(<italic>&#x003b2;</italic><sub>1,<italic>j</italic></sub>,&#x02026;,<italic>&#x003b2;</italic><sub><italic>K</italic>,<italic>j</italic></sub>)<sup><italic>T</italic></sup>. Our assumption can be represented as <bold><italic>&#x003b4;</italic></bold><sub><italic>j</italic></sub>=<bold>X</bold><bold><italic>&#x003b2;</italic></bold><sub><italic>j</italic></sub>. When the cluster number <italic>K</italic> is smaller than the CRE number <italic>I</italic>, imposing this additional structure on <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub> reduces the number of unknown parameters from <italic>I</italic> to <italic>K</italic>. As a result, it increases the average amount of information available for estimating each parameter. Note that in our model, two CREs with the same <italic>&#x003b4;</italic> can still have different activities (i.e., different <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub>s) because log(<italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub>)=<italic>m</italic><sub><italic>i</italic></sub>+<italic>s</italic><sub><italic>i</italic></sub><italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub>. In other words, SCATE allows co-activated CREs to share information through <italic>&#x003b4;</italic>, but at the same time it also allows each CRE to keep its own locus-specific baseline characteristics. This is an important feature missing in other existing methods. Another unique feature of SCATE is that we treat the cluster number <italic>K</italic> as a tuning parameter and adaptively choose it based on available information to optimize the analysis&#x02019; spatial resolution. Unlike SCATE, other existing methods aggregate CREs based on known pathways. For them, <italic>K</italic> is fixed and the analysis&#x02019; spatial resolution cannot be tuned and optimized.</p></list-item><list-item><p><italic>Model for technical bias</italic>. Since the locus effects <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub> are learned from the bulk data, we view <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> as the activity one would obtain if one could measure a bulk regulome sample (e.g., bulk DNase-seq) consisting of cells identical to cell <italic>j</italic>. In scATAC-seq data, <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> is distorted to become <inline-formula id="IEq11"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mu _{i,j}^{sc}$\end{document}</tex-math><mml:math id="M26"><mml:msubsup><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq11.gif"/></alternatives></inline-formula> due to technical biases in single-cell experiments (e.g., DNA amplification bias). We model these unknown technical biases using a cell-specific monotone function <italic>h</italic><sub><italic>j</italic></sub>(.). In other words, we assume <inline-formula id="IEq12"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\log (\mu _{i,j}^{sc}) = h_{j}(\log (\mu _{i,j}))$\end{document}</tex-math><mml:math id="M28"><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:munderover><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:munderover><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq12.gif"/></alternatives></inline-formula>. We estimate the unknown function <italic>h</italic><sub><italic>j</italic></sub>(.) by comparing scATAC-seq data with the bulk regulome data at CREs that show constant activity across different cell types (see below). Once <italic>h</italic><sub><italic>j</italic></sub>(.) is estimated, it is assumed to be known.</p></list-item><list-item><p><italic>Model for observed read counts</italic>. We assume that the observed read count <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub> is generated from a Poisson distribution with mean <inline-formula id="IEq13"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$L_{j}\mu _{i,j}^{sc}$\end{document}</tex-math><mml:math id="M30"><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq13.gif"/></alternatives></inline-formula>. Here <italic>L</italic><sub><italic>j</italic></sub> is the total number of reads in cell <italic>j</italic> divided by 10<sup>8</sup>. It is a cell-specific normalizing factor to adjust for library size.</p></list-item></list></p><p>For a fixed cluster number <italic>K</italic>, we fit the model as follows: (1) use the bulk regulome data compendium to learn locus effects <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub>; (2) use scATAC-seq data and the bulk regulome data compendium to learn technical bias function <italic>h</italic><sub><italic>j</italic></sub>(.) which normalizes scATAC-seq data with the bulk regulome compendium used to learn locus effects; (3) given <italic>m</italic><sub><italic>i</italic></sub>,<italic>s</italic><sub><italic>i</italic></sub> and <italic>h</italic><sub><italic>j</italic></sub>(.), use the observed data <bold>y</bold> to estimate <bold><italic>&#x003b2;</italic></bold> which will determine <bold><italic>&#x003b4;</italic></bold> and <bold><italic>&#x003bc;</italic></bold>. The estimated <bold><italic>&#x003bc;</italic></bold> provides the final estimates for CRE activities.</p><p>In order to optimize the analysis&#x02019; spatial resolution, SCATE treats the cluster number <italic>K</italic> as a tuning parameter. CREs are clustered at multiple granularity levels corresponding to different <italic>K</italic>s. As <italic>K</italic> increases, the average number of CREs per cluster decreases. This increases spatial resolution because the cluster activity more resembles the activity of individual CREs. However, increasing <italic>K</italic> also decreases the amount of information for estimating the activity of each cluster, and thus the estimates become noisier. We use a cross-validation approach to choose the optimal <italic>K</italic> that balances spatial resolution and estimation uncertainty (see below).</p></sec><sec id="Sec18"><title>Estimate locus effects <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub></title><p>We estimate locus effects using the rich bulk data from diverse cell types in the bulk regulome compendium. Let <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub> be the observed read count for genomic bin <italic>i</italic> and bulk sample <italic>j</italic> (<italic>j</italic>=1,&#x02026;,<italic>J</italic>). <italic>L</italic><sub><italic>j</italic></sub> represents sample <italic>j</italic>&#x02019;s library size in the unit of hundred million. For each genomic bin <italic>i</italic>, locus effects are estimated using the observed counts {<italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub>:<italic>j</italic>=1,&#x02026;,<italic>J</italic>}. We model <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub> in bulk data as:
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \begin{aligned} &#x00026;\quad y_{i,j} \sim Poisson (L_{j} \mu_{i,j}) \\ &#x00026;\quad \log(\mu_{i,j})=m_{i} + s_{i} \delta_{i,j} \end{aligned}  $$ \end{document}</tex-math><mml:math id="M32"><mml:mtable><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0223c;</mml:mo><mml:mtext mathvariant="italic">Poisson</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="13059_2020_2075_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p><p>This is similar to the single-cell model above but without the technical bias component. Without additional constraints, <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub> are not identifiable since each bin <italic>i</italic> has only <italic>J</italic> observed data points but <italic>J</italic>+2 unknown parameters (i.e., <italic>m</italic><sub><italic>i</italic></sub>,<italic>s</italic><sub><italic>i</italic></sub>, and <italic>J</italic> different <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub>s). Thus, we further assume <italic>&#x003b4;</italic><sub><italic>i</italic>,<italic>j</italic></sub>&#x0223c;<italic>N</italic>(0,1). This is equivalent to assuming that log(<italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub>) for bin <italic>i</italic> is normally distributed, and <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub> are its mean and SD respectively. This assumption is based on observing that CREs&#x02019; log-normalized read counts after standardization (i.e. subtract <italic>m</italic><sub><italic>i</italic></sub> and divide by <italic>s</italic><sub><italic>i</italic></sub>) are approximately normally distributed (Additional file&#x000a0;<xref rid="MOESM2" ref-type="media">2</xref>: Fig. S15). With this additional constraint, <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub> become identifiable. Since maximum likelihood estimation for all genomic bins in a big genome like human is computationally slow, SCATE employs the method of moments to estimate <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub>. Based on the model and theoretical moments of Poisson and Lognormal distributions, the first and second moments of <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub>/<italic>L</italic><sub><italic>j</italic></sub> are (see Additional file&#x000a0;<xref rid="MOESM7" ref-type="media">7</xref>: Supplemental Note for derivations):
<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \begin{aligned} &#x00026;\quad E \left(\frac{y_{i,j}}{L_{j}} \right) = e^{m_{i}+\frac{1}{2}s_{i}^{2}} \\ &#x00026;\quad E \left(\frac{y_{i,j}}{L_{j}} \right)^{2} = \frac{1}{L_{j}}e^{m_{i}+\frac{1}{2}s_{i}^{2}}+ \left[e^{m_{i}+\frac{1}{2}s_{i}^{2}}\right]^{2} e^{s_{i}^{2}} \end{aligned}  $$ \end{document}</tex-math><mml:math id="M34"><mml:mtable><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:mi>E</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:mi>E</mml:mi><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mfenced close="]" open="["><mml:mrow><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:msup></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="13059_2020_2075_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p><p>By matching the model-based moments to the empirical first two moments of the observed <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub>/<italic>L</italic><sub><italic>j</italic></sub>s, we obtain the following closed-form estimates for <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub> which can be computed efficiently:
<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \begin{aligned} &#x00026;\quad \tilde{s}_{i} = \sqrt{\log \left(\frac{\sum_{j} (y_{i,j}/L_{j})^{2}/J - \sum_{j} (y_{i,j}/L_{j}^{2})/J}{(\sum_{j} (y_{i,j}/L_{j})/J)^{2}} \right)} \\ &#x00026;\quad \tilde{m}_{i} = \log \left(\frac{\sum_{j} (y_{i,j}/L_{j})}{J} \right) - \tilde{s}_{i}^{2}/2 \end{aligned}  $$ \end{document}</tex-math><mml:math id="M36"><mml:mtable><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mo>log</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mfrac><mml:mrow><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:mi>J</mml:mi><mml:mo>&#x02212;</mml:mo><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:munderover><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:munderover><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>J</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>J</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced></mml:mrow></mml:msqrt></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>log</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mfrac><mml:mrow><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>J</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced><mml:mo>&#x02212;</mml:mo><mml:munderover><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:munderover><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="13059_2020_2075_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p><p>In rare cases where <inline-formula id="IEq14"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\frac {\sum _{j} (y_{i,j}/L_{j})^{2}/J- \sum _{j} (y_{i,j}/L_{j}^{2})/J}{(\sum _{j} (y_{i,j}/L_{j})/J)^{2}} &#x0003c; 1$\end{document}</tex-math><mml:math id="M38"><mml:mfrac><mml:mrow><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:mi>J</mml:mi><mml:mo>&#x02212;</mml:mo><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msubsup><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>J</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>J</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mo>&#x0003c;</mml:mo><mml:mn>1</mml:mn></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq14.gif"/></alternatives></inline-formula>, the estimates become:
<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \begin{aligned} &#x00026;\quad \tilde{s}_{i} = 0 \\ &#x00026;\quad \tilde{m}_{i} = \log\left(\frac{\sum_{j} (y_{i,j}/L_{j})}{J} \right) \end{aligned}  $$ \end{document}</tex-math><mml:math id="M40"><mml:mtable><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>log</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mfrac><mml:mrow><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>J</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="13059_2020_2075_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p></sec><sec id="Sec19"><title>Estimate technical bias function <italic>h</italic><sub><italic>j</italic></sub>(.)</title><p>The cell-specific technical bias function <italic>h</italic><sub><italic>j</italic></sub>(.) is estimated using known CREs whose activities do not change much across cell types. For each CRE, the <inline-formula id="IEq15"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {s}_{i}$\end{document}</tex-math><mml:math id="M42"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq15.gif"/></alternatives></inline-formula> estimated above reflects its variability across diverse cell types in the bulk regulome data compendium. To select low-variability CREs, we first group all known CREs into 10 strata based on their baseline mean activity values (i.e., <inline-formula id="IEq16"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {m}_{i}$\end{document}</tex-math><mml:math id="M44"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq16.gif"/></alternatives></inline-formula>s). To do so, the <inline-formula id="IEq17"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {m}_{i}$\end{document}</tex-math><mml:math id="M46"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq17.gif"/></alternatives></inline-formula>s from all CREs are collected and their 10%, 20%,..., 90% quantiles are computed. These quantiles are used to define the 10 strata. Within each stratum, we find 1000 CREs with the smallest <inline-formula id="IEq18"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {s}_{i}$\end{document}</tex-math><mml:math id="M48"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq18.gif"/></alternatives></inline-formula> values. The union set of these 10000 CREs creates the set <inline-formula id="IEq19"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathscr {H}$\end{document}</tex-math><mml:math id="M50"><mml:mi>&#x0210b;</mml:mi></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq19.gif"/></alternatives></inline-formula> of &#x0201c;low-variability&#x0201d; CREs. For these low-variability CREs, their activities are almost constant across cell types. Thus, one can assume that their activities in a new cell are known and approximately equal to <inline-formula id="IEq20"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {m}_{i}$\end{document}</tex-math><mml:math id="M52"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq20.gif"/></alternatives></inline-formula>, and the model for their scATAC-seq read counts in a new cell <italic>j</italic> can be simplified to:
<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \begin{aligned} &#x00026;\quad y_{i,j} \sim Poisson (L_{j} \mu^{sc}_{i,j}) \\ &#x00026;\quad \log(\mu^{sc}_{i,j}) = h_{j}(\log(\mu_{i,j})) \approx h_{j}(\tilde{m}_{i})\\ \end{aligned}  $$ \end{document}</tex-math><mml:math id="M54"><mml:mtable><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0223c;</mml:mo><mml:mtext mathvariant="italic">Poisson</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="1em"/><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:munderover><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">sc</mml:mtext></mml:mrow></mml:munderover><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mo>log</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>)</mml:mo><mml:mo>&#x02248;</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr/></mml:mtable></mml:math><graphic xlink:href="13059_2020_2075_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula></p><p>We estimate <italic>h</italic><sub><italic>j</italic></sub>(.) using <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub>s from these low-variability CREs. The function <italic>h</italic><sub><italic>j</italic></sub>(.) is monotonically increasing but has unknown form. We model it using monotone spline [<xref ref-type="bibr" rid="CR37">37</xref>] (splines2 package in R):
<disp-formula id="Equb"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$h_{j}(x)= \alpha_{j,0} + \sum_{t=1}^{T} \alpha_{j,t}I_{t}(x) \quad s.t. \ \alpha_{j,t} \geq 0 \ (t=1,...,T) $$ \end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo><mml:mspace width="1em"/><mml:mi>s.t.</mml:mi><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="1em"/><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>...</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math><graphic xlink:href="13059_2020_2075_Article_Equb.gif" position="anchor"/></alternatives></disp-formula></p><p>Here, <italic>I</italic><sub><italic>t</italic></sub>(<italic>x</italic>) are known I-spline basis functions (which are monotone functions [<xref ref-type="bibr" rid="CR37">37</xref>]) and <italic>&#x003b1;</italic><sub><italic>j</italic>,<italic>t</italic></sub>s are unknown regression coefficients. The constraints <italic>&#x003b1;</italic><sub><italic>j</italic>,<italic>t</italic></sub>&#x02265;0 make <italic>h</italic><sub><italic>j</italic></sub>(.) monotone and non-decreasing. The maximum likelihood estimates for coefficients <bold><italic>&#x003b1;</italic></bold><sub><italic>j</italic></sub>={<italic>&#x003b1;</italic><sub><italic>j</italic>,<italic>t</italic></sub>:<italic>t</italic>=0,&#x02026;,<italic>T</italic>} can then be obtained as:
<disp-formula id="Equ7"><label>7</label><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \quad \tilde{\boldsymbol{\alpha}}_{j} = \underset{\boldsymbol{\alpha}_{j}}{\text{argmax}} \sum_{i \in \mathscr{H}} [ y_{i,j} * h(\tilde{m}_{i}) - L_{j} e^{h(\tilde{m}_{i})}] \quad s.t. \ \alpha_{j,t} \geq 0 \ (t=1,...,T)  $$ \end{document}</tex-math><mml:math id="M58"><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mtext>argmax</mml:mtext></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>&#x0210b;</mml:mi></mml:mrow></mml:munder><mml:mo>[</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02217;</mml:mo><mml:mi>h</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>]</mml:mo><mml:mspace width="1em"/><mml:mi>s.t.</mml:mi><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn><mml:mspace width="1em"/><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>...</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo>)</mml:mo></mml:math><graphic xlink:href="13059_2020_2075_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula></p><p>To select the optimal set of basis functions, we try different settings of knots by changing <italic>T</italic>. We set <italic>T</italic>=1,2,...,6, respectively, which sets the number of knots from 0 to 5. For each <italic>T</italic>, the <italic>t</italic>/<italic>T</italic>th quantiles (<italic>t</italic>=1,...,<italic>T</italic>&#x02212;1) of <inline-formula id="IEq21"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {m}_{i}$\end{document}</tex-math><mml:math id="M60"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq21.gif"/></alternatives></inline-formula> are chosen as the knots. Given the knots, the spline basis functions are then generated by splines2. The <italic>T</italic> with the smallest Bayesian information criterion (BIC) is chosen to obtain the optimal set of basis functions.</p></sec><sec id="Sec20"><title>Estimate <bold><italic>&#x003b2;</italic></bold>,<bold><italic>&#x003b4;</italic></bold>, and <bold><italic>&#x003bc;</italic></bold></title><p>Once the locus effects <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub> and technical bias function <italic>h</italic><sub><italic>j</italic></sub>(.) are estimated, SCATE treats them as known and will then estimate <bold><italic>&#x003b2;</italic></bold>. Suppose CREs are grouped into <italic>K</italic> clusters. The activity for cluster <italic>k</italic> in cell <italic>j</italic>, <italic>&#x003b2;</italic><sub><italic>k</italic>,<italic>j</italic></sub>, can be estimated using the observed read counts in cell <italic>j</italic> for all CREs in the cluster. When data are sparse (particularly for clusters with small number of CREs), the maximum likelihood estimate can be unreliable due to its high variance. Thus, consistent with our bulk regulome data model, we impose a prior distribution on <italic>&#x003b2;</italic><sub><italic>k</italic>,<italic>j</italic></sub> to help regularize its estimation: <italic>&#x003b2;</italic><sub><italic>k</italic>,<italic>j</italic></sub>&#x0223c;<italic>N</italic>(0,1). We then estimate <italic>&#x003b2;</italic><sub><italic>k</italic>,<italic>j</italic></sub> using its posterior mode:
<disp-formula id="Equc"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\quad \tilde{\beta}_{k,j} = \text{argmax}_{\beta} \sum_{i \in C(k)} \left[ y_{i,j} h_{j}(m_{i} + s_{i} \beta) - L_{j} e^{h_{j}(m_{i} + s_{i} \beta)}\right] - \beta^{2}/2 $$ \end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>&#x003b2;</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mtext>argmax</mml:mtext></mml:mrow><mml:mrow><mml:mi>&#x003b2;</mml:mi></mml:mrow></mml:msub><mml:munder><mml:mrow><mml:mo mathsize="big">&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>C</mml:mi><mml:mo>(</mml:mo><mml:mi>k</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:mfenced close="]" open="["><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mi>&#x003b2;</mml:mi><mml:mo>)</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mi>&#x003b2;</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003b2;</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><graphic xlink:href="13059_2020_2075_Article_Equc.gif" position="anchor"/></alternatives></disp-formula></p><p>Here, <italic>C</italic>(<italic>k</italic>) represents the set of CREs in cluster <italic>k</italic>. The above optimization involves only one variable <italic>&#x003b2;</italic>, and thus the computation is not expensive. Estimation of different <italic>&#x003b2;</italic><sub><italic>k</italic>,<italic>j</italic></sub>s are handled separately.</p><p>Given <inline-formula id="IEq22"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {\beta }_{k,j}, \delta _{i,j}$\end{document}</tex-math><mml:math id="M64"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>&#x003b2;</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003b4;</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq22.gif"/></alternatives></inline-formula> and <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> can be derived using model (<xref rid="Equ1" ref-type="">1</xref>).</p></sec><sec id="Sec21"><title>Analysis at multiple spatial resolution levels (i.e., multiple <italic>K</italic>s)</title><p>SCATE analyzes data at multiple spatial resolution levels by setting the cluster number <italic>K</italic> to different values. To do so, known CREs are clustered based on their co-activation patterns across all samples in the bulk regulome data compendium. Before clustering, CREs&#x02019; normalized data <inline-formula id="IEq23"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {y}_{i,j}$\end{document}</tex-math><mml:math id="M66"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq23.gif"/></alternatives></inline-formula> are organized as a matrix. Rows of the matrix correspond to CREs and columns correspond to samples. Each row is standardized to have zero mean and unit SD. Then, CREs (i.e., rows) are clustered hierarchically at multiple granularity levels. A naive hierarchical clustering of 522,173 CREs (475,865 CREs for mouse) is difficult because it requires computing a distance matrix on the order of 500,000&#x000d7;500,000. To make the computation tractable, SCATE employs a three-stage clustering approach.
<list list-type="bullet"><list-item><p>Stage 1: K-means clustering (Euclidean distance) is used to group all CREs into 5000 clusters. Each cluster consists of a group of CREs with similar cross-sample activity patterns. The mean number of CREs contained in each cluster is approximately 100 (for human 522,173 CREs/5000 clusters = 104 CREs/cluster; for mouse 475,865 CREs/5000 clusters = 95 CREs/cluster). The end product of this stage is 5000 CRE clusters. For each cluster, the mean activity of all CREs in each sample is computed. It is then standardized to have zero mean and unit SD across samples.</p></list-item><list-item><p>Stage 2: To obtain coarser clusters, the 5000 clusters from stage 1 are grouped hierarchically using hierarchical clustering (Euclidean distance, complete agglomeration) based on their mean activity profile. In this way, CREs are hierarchically grouped into 5000, 2500, 1250, 625, 312, and 156 clusters.</p></list-item><list-item><p>Stage 3: To obtain fine-grained clusters, for each cluster obtained in Stage 1, hierarchical clustering is applied to split CREs in that cluster into smaller clusters. In this way, each cluster from Stage 1 can be divided into 2, 4, 8,... subclusters until each subcluster contains only one CRE. For different Stage 1 clusters, their CRE numbers are different and therefore the exact number of their subclusters obtained in Stage 3 may vary.</p></list-item></list></p><p>After all three stages, we obtain clusters of CREs at multiple granularity levels. In other words, CREs are grouped into <italic>K</italic> clusters for different <italic>K</italic> values. For human, <italic>K</italic>=156,312,625,1250,2500,5000,9856,19008,35361,64398,117596,213432,521820. For mouse, <italic>K</italic>=156,312,625,1250,2500,5000,9996,19953,39732,78868,154813,283422,465055. CREs&#x02019; clustering structure for human and mouse obtained using our BDDB DNase-seq compendium is stored and provided as part of the SCATE package. Users can use it directly without recomputing them.</p></sec><sec id="Sec22"><title>Optimizing spatial resolution (<italic>K</italic>) by cross-validation</title><p>SCATE optimizes the spatial resolution of the analysis by choosing the optimal <italic>K</italic> via cross-validation. For a given <italic>K</italic>, after clustering CREs, CREs are randomly partitioned into a training set (90% CREs) and a testing set (10% CREs). Next, for each cluster <italic>k</italic>, CREs in the training set are used to estimate <italic>&#x003b2;</italic><sub><italic>k</italic>,<italic>j</italic></sub> which is the common activity of all CREs in that cluster. Using the estimated <inline-formula id="IEq24"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {\beta }_{k,j}$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>&#x003b2;</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq24.gif"/></alternatives></inline-formula>, the log-likelihood of the test CREs in cluster <italic>k</italic> can be computed according to model (<xref rid="Equ1" ref-type="">1</xref>) because they share the same <italic>&#x003b2;</italic><sub><italic>k</italic>,<italic>j</italic></sub> with training CREs in the same cluster. We perform the same calculations for all clusters and obtain the median log-likelihood of all testing CREs.</p><p>The above procedure is run for different values of <italic>K</italic>. The cluster number <italic>K</italic> with the largest median log-likelihood in test data is selected as the optimal <italic>K</italic>.</p></sec><sec id="Sec23"><title>Postprocessing &#x02013; SCATE for other genomic bins in a single cell</title><p>After estimating activities of known CREs, SCATE will analyze all other bins in the genome. These bins fall into two classes. First, some bins have zero scATAC-seq read count across all cells. For these bins, <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> is estimated to be zero. Second, the remaining bins have at least one read in the scATAC-seq data. For these bins, we estimate <italic>&#x003bc;</italic><sub><italic>i</italic>,<italic>j</italic></sub> using a predictive machine learning approach xgboost (eXtreme Gradient Boosting [<xref ref-type="bibr" rid="CR38">38</xref>]) where the response variable is the SCATE signal <inline-formula id="IEq25"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {\mu }_{i,j}$\end{document}</tex-math><mml:math id="M70"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq25.gif"/></alternatives></inline-formula> and the predictors are normalized read count <italic>y</italic><sub><italic>i</italic>,<italic>j</italic></sub>/<italic>L</italic><sub><italic>j</italic></sub>,<italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub>. The model is trained using known CREs. The trained model is then applied to bins not included in the known CRE list to make predictions. This will transform the read counts at these bins to a scale consistent with the reconstructed activities for known CREs.</p></sec><sec id="Sec24"><title>SCATE for multiple cells</title><p>When a scATAC-seq dataset contains multiple cells, we first cluster cells using a method similar to our previously published method SCRAT [<xref ref-type="bibr" rid="CR13">13</xref>]. Before clustering cells, CREs are grouped into 5000 clusters using BDDB as before. For each cell, the average activity of all CREs in each CRE cluster is calculated as in SCRAT. This transforms the scATAC-seq data in each cell into a feature vector consisting of 5000 CRE cluster activities. After quantile normalizing features across cells, features with low-variability across cells are filtered out. To identify low-variability features, for each feature, we calculate the mean and SD of its activity across cells. Using the means and SDs of all features, we fit a polynomial regression with degree =3 to describe the relationship between the SD (response) and mean (independent variable). Features for which the observed SD is smaller than the expected SD (from the fitted model) given the mean activity are filtered out. Among the remaining high-variability features, we retain those that have non-zero read count in at least 10% of cells. PCA is then performed on the retained features. The top 50 principal components are then used to perform tSNE. The model-based clustering (mclust in R) [<xref ref-type="bibr" rid="CR26">26</xref>] is used to perform clustering on tSNE space with default settings. The cluster number is chosen based on the Bayesian Information Criterion in mclust. If users do not want to use the default cluster number or clustering method, SCATE also provides an option to allow them to specify the cluster number by their own or use their own clustering results from other algorithms.</p><p>After cell clustering, each cluster consists of a set of similar cells and represents a relatively homogeneous cell subpopulation. SCATE will estimate the regulome profile of each cluster. For each cell cluster, reads from all cells are pooled together to create a pseudo-cell. The SCATE model for a single cell described above is then applied to the pseudo-cell to estimate CRE activities. For instance, the bias normalizing function <italic>h</italic><sub><italic>j</italic></sub>(.) is estimated by treating the pseudo-cell obtained from cluster <italic>j</italic> (after pooling cells) as a single cell. The estimated regulome profile of the pooled sample typically will achieve higher spatial resolution than a single cell since (1) the pseudo-cell contains data from more than one cell and (2) SCATE automatically tunes the spatial resolution based on available information. The output of SCATE is the estimated regulome profile for each cell subpopulation.</p></sec><sec id="Sec25"><title>Peak calling and evaluation</title><p>A moving average approach is used to call peaks from the reconstructed regulome profile. Given a moving window size 2<italic>W</italic>+1, the moving average signal for each 200 bp bin is calculated as the average signal of the bin and its 2<italic>W</italic> neighboring bins (<italic>W</italic> bins on the left and <italic>W</italic> bins on the right). By default, <italic>W</italic>=1 which amounts to averaging signals from 3 bins spanning 600 bp in total. In parallel, we also calculate the average signal of 2<italic>W</italic>+1 randomly selected bins (not necessarily neighboring bins) for 100,000 times to construct a background distribution for the moving average signal. For a genomic bin with moving average signal <italic>s</italic>, the false discovery rate (FDR) is estimated as the proportion of background distribution larger than <italic>s</italic> divided by the observed proportion of genomic bins with signals larger than <italic>s</italic>. Genomic bins with FDR smaller than 0.05 are identified and consecutive bins are merged into peaks. Peaks are ranked by FDR. For peaks tied with the same FDR, they are ranked further by the moving average signals.</p><p>For evaluation, peaks called using signals constructed by different methods are compared with peaks called using bulk regulome data. In the evaluation, we also assessed MACS peak calling on pooled cells. MACS is run with settings &#x02013;nomodel &#x02013;extsize 147.</p></sec><sec id="Sec26"><title>TFBS prediction</title><p>TF motifs are downloaded from JASPAR [<xref ref-type="bibr" rid="CR39">39</xref>] (Additional file&#x000a0;<xref rid="MOESM3" ref-type="media">3</xref>: Table S2). These motifs were mapped to the genome using CisGenome with likelihood ratio cutoff = 100. Narrow peak files of the corresponding ChIP-seq data in GM12878 and K562 are downloaded from ENCODE. For each TF and cell type, genomic bins with motif were ranked based on reconstructed scATAC-seq signals to predict TFBSs. Genomic bins with motif that overlap with ChIP-seq peaks are used as gold standard.</p></sec><sec id="Sec27"><title>Processing of benchmark bulk DNase-seq and ATAC-seq data</title><p>The benchmark bulk DNase-seq data for GM12878 and K562 (Dataset 1) are obtained from ENCODE. Bulk ATAC-seq data for human CMP and monocytes (Dataset 2), human hematopoietic cell types, and human PBMC in the last two examples are obtained from GEO under accession GSE74912. Bulk DNase-seq data for mouse brain and thymus (Dataset 3) are obtained from ENCODE.</p><p>Bulk DNase-seq samples are processed using the same protocol as DNase-seq data processing in BDDB. For ATAC-seq sample, reads are aligned to human genome hg19 using bowtie with parameters (-X 2000 -m 1). PCR duplicates are removed by Picard (<ext-link ext-link-type="uri" xlink:href="http://broadinstitute.github.io/picard/">http://broadinstitute.github.io/picard/</ext-link>). The aligned reads are used to obtain bin read counts.</p></sec><sec id="Sec28"><title>BDDB data variance explained by mean DNase-seq profile</title><p>Denote <inline-formula id="IEq26"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {y}_{i,j}$\end{document}</tex-math><mml:math id="M72"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq26.gif"/></alternatives></inline-formula> as the log-normalized read count for CRE <italic>i</italic> (<italic>i</italic>=1,2,...,<italic>I</italic>) and sample <italic>j</italic> (<italic>j</italic>=1,2,...,<italic>J</italic>) in BDDB. Denote <italic>a</italic><sub><italic>i</italic></sub> as the mean DNase-seq activity (i.e., mean of <inline-formula id="IEq27"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {y}_{i,j}$\end{document}</tex-math><mml:math id="M74"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq27.gif"/></alternatives></inline-formula>s) for CRE <italic>i</italic> computed using BDDB samples. Denote <inline-formula id="IEq28"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\bar {\tilde {y}}=\sum _{ij} \tilde {y}_{i,j}/(IJ)$\end{document}</tex-math><mml:math id="M76"><mml:mover accent="true"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mo>&#x000af;</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ij</mml:mtext></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mo>(</mml:mo><mml:mtext mathvariant="italic">IJ</mml:mtext><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq28.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq29"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\bar {a}=\sum _{i} a_{i}/I$\end{document}</tex-math><mml:math id="M78"><mml:mi>&#x00101;</mml:mi><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi>I</mml:mi></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq29.gif"/></alternatives></inline-formula>. The proportion of variance explained is calculated as <inline-formula id="IEq30"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$J\sum _{i} (a_{i}-\bar {a})^{2}/\sum _{ij} (\tilde {y}_{i,j}-\bar {\tilde {y}})^{2}$\end{document}</tex-math><mml:math id="M80"><mml:mi>J</mml:mi><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:munder><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>&#x00101;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:munder><mml:mrow><mml:mo>&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ij</mml:mtext></mml:mrow></mml:munder><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mover accent="true"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mo>&#x000af;</mml:mo></mml:mover><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2020_2075_Article_IEq30.gif"/></alternatives></inline-formula>.</p></sec><sec id="Sec29"><title>Analyses using existing methods</title><p>Existing methods were run using their default parameter settings implemented in their software or reported in their original publications. All these methods used MACS for peak calling. The parameters for running MACS as reported in their original papers are:
<list list-type="bullet"><list-item><p>Cicero: MACS2 with parameters &#x02013;nomodel &#x02013;extsize 200 &#x02013;shift -100 &#x02013;keep-dup all.</p></list-item><list-item><p>Dr.seq2: MACS1.4 with parameters &#x02013;keep-dup 1 &#x02013;nomodel &#x02013;shiftsize 73.</p></list-item><list-item><p>Scasat: MACS2 with parameters &#x02013;nomodel, &#x02013;nolambda, &#x02013;keep-dup all &#x02013;call-summits -p 0.0001.</p></list-item><list-item><p>scABC: MACS2 with parameters -p 0.1.</p></list-item><list-item><p>cisTopic: MACS2 with parameters &#x02013;nomodel -q 0.001.</p></list-item><list-item><p>Destin: MACS2 with parameters &#x02013;nomodel -p 0.01.</p></list-item></list></p></sec><sec id="Sec30"><title>Software</title><p>SCATE is implemented as an R package. It can be installed from GitHub. In terms of computational time, compiling CREs and clustering CREs typically take 1&#x02013;2 days. Given the CRE list and CREs&#x02019; clustering structure, running SCATE to reconstruct regulome approximately takes 5 minutes per cell cluster on a computer with 10 computing cores (2.5 GHz CPU/core) and a total of 20GB RAM.</p></sec></sec><sec sec-type="supplementary-material"><title>Supplementary information</title><sec id="Sec31"><supplementary-material content-type="local-data" id="MOESM1"><media xlink:href="13059_2020_2075_MOESM1_ESM.pdf"><caption><p><bold>Additional file 1</bold> Table S1. A comparison between SCATE and other existing methods.</p></caption></media></supplementary-material><p><supplementary-material content-type="local-data" id="MOESM2"><media xlink:href="13059_2020_2075_MOESM2_ESM.pdf"><caption><p><bold>Additional file 2</bold> Figures S1-S15.</p></caption></media></supplementary-material></p><p><supplementary-material content-type="local-data" id="MOESM3"><media xlink:href="13059_2020_2075_MOESM3_ESM.csv"><caption><p><bold>Additional file 3</bold> Table S2. List of TF binding motifs used in the study with their JASPAR accession numbers.</p></caption></media></supplementary-material></p><p><supplementary-material content-type="local-data" id="MOESM4"><media xlink:href="13059_2020_2075_MOESM4_ESM.csv"><caption><p><bold>Additional file 4</bold> Table S3. List of human bulk DNase-seq samples in BDDB.</p></caption></media></supplementary-material></p><p><supplementary-material content-type="local-data" id="MOESM5"><media xlink:href="13059_2020_2075_MOESM5_ESM.csv"><caption><p><bold>Additional file 5</bold> Table S4. List of mouse bulk DNase-seq samples in BDDB.</p></caption></media></supplementary-material></p><p><supplementary-material content-type="local-data" id="MOESM6"><media xlink:href="13059_2020_2075_MOESM6_ESM.pdf"><caption><p><bold>Additional file 6</bold> Supplementary note. Choice of preprocessing parameters for identifying signal bins.</p></caption></media></supplementary-material></p><p><supplementary-material content-type="local-data" id="MOESM7"><media xlink:href="13059_2020_2075_MOESM7_ESM.pdf"><caption><p><bold>Additional file 7</bold> Supplementary note. Derivation of moment estimators for <italic>m</italic><sub><italic>i</italic></sub> and <italic>s</italic><sub><italic>i</italic></sub>.</p></caption></media></supplementary-material></p><p><supplementary-material content-type="local-data" id="MOESM8"><media xlink:href="13059_2020_2075_MOESM8_ESM.pdf"><caption><p><bold>Additional file 8</bold> Review history.</p></caption></media></supplementary-material></p></sec></sec></body><back><fn-group><fn><p><bold>Publisher&#x02019;s Note</bold></p><p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p></fn></fn-group><sec><title>Supplementary information</title><p><bold>Supplementary information</bold> accompanies this paper at 10.1186/s13059-020-02075-3.</p></sec><ack><title>Acknowledgements</title><p>We would like to thank the reviewers for their time and valuable feedback.</p><sec id="d30e5633"><title>Review history</title><p>The review history is available as Additional file&#x000a0;<xref rid="MOESM8" ref-type="media">8</xref>.</p></sec></ack><notes notes-type="author-contribution"><title>Authors&#x02019; contributions</title><p>HJ conceived the study. HJ and ZJ developed the methods. ZJ implemented the methods and conducted data analysis. WZ processed scATAC-seq and bulk ATAC-seq data. ZJ and WH developed the software. All authors participated in writing the manuscript. All authors read and approved the final manuscript.</p></notes><notes notes-type="funding-information"><title>Funding</title><p>This study is supported by the National Institutes of Health grant R01HG010889.</p></notes><notes notes-type="data-availability"><title>Availability of data and materials</title><p>SCATE is freely available as an open source R package under the MIT License. One can download the software and source codes from the GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/zji90/SCATE">https://github.com/zji90/SCATE</ext-link>) [<xref ref-type="bibr" rid="CR40">40</xref>]. The version of source code used in this article is deposited in Zenodo with the access code DOI: 10.5281/zenodo.3711558 (10.5281/zenodo.3711558) [<xref ref-type="bibr" rid="CR41">41</xref>]. The SCATE R package is also submitted to Bioconductor [<xref ref-type="bibr" rid="CR42">42</xref>] and is currently under review by the Bioconductor maintenance team. Once approved, it will be available at Bioconductor as well. Bulk DNase-seq data used to construct BDDB are downloaded from the ENCODE project [<xref ref-type="bibr" rid="CR43">43</xref>]. Single-cell ATAC-seq data are downloaded from the Gene Expression Omnibus under the accession numbers GSE65360 [<xref ref-type="bibr" rid="CR44">44</xref>], GSE96769 [<xref ref-type="bibr" rid="CR45">45</xref>], GSE111586 [<xref ref-type="bibr" rid="CR46">46</xref>], and GSE129785 [<xref ref-type="bibr" rid="CR47">47</xref>]. Bulk ATAC-seq data for human hematopoietic and PBMC cell types are downloaded from the Gene Expression Omnibus under the accession number GSE74912 [<xref ref-type="bibr" rid="CR48">48</xref>].</p></notes><notes id="FPar1"><title>Ethics approval and consent to participate</title><p>Not applicable</p></notes><notes id="FPar2"><title>Consent for publication</title><p>Not applicable</p></notes><notes id="FPar3" notes-type="COI-statement"><title>Competing interests</title><p>The authors declare that they have no competing interests.</p></notes><ref-list id="Bib1"><title>References</title><ref id="CR1"><label>1</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Johnson</surname><given-names>DS</given-names></name><name><surname>Mortazavi</surname><given-names>A</given-names></name><name><surname>Myers</surname><given-names>RM</given-names></name><name><surname>Wold</surname><given-names>B</given-names></name></person-group><article-title>Genome-wide mapping of in vivo protein-dna interactions</article-title><source>Science</source><year>2007</year><volume>316</volume><issue>5830</issue><fpage>1497</fpage><lpage>502</lpage><?supplied-pmid 17540862?><pub-id pub-id-type="pmid">17540862</pub-id></element-citation></ref><ref id="CR2"><label>2</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Boyle</surname><given-names>AP</given-names></name><name><surname>Davis</surname><given-names>S</given-names></name><name><surname>Shulha</surname><given-names>HP</given-names></name><name><surname>Meltzer</surname><given-names>P</given-names></name><name><surname>Margulies</surname><given-names>EH</given-names></name><name><surname>Weng</surname><given-names>Z</given-names></name><name><surname>Furey</surname><given-names>TS</given-names></name><name><surname>Crawford</surname><given-names>GE</given-names></name></person-group><article-title>High-resolution mapping and characterization of open chromatin across the genome</article-title><source>Cell</source><year>2008</year><volume>132</volume><issue>2</issue><fpage>311</fpage><lpage>22</lpage><?supplied-pmid 18243105?><pub-id pub-id-type="pmid">18243105</pub-id></element-citation></ref><ref id="CR3"><label>3</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buenrostro</surname><given-names>JD</given-names></name><name><surname>Giresi</surname><given-names>PG</given-names></name><name><surname>Zaba</surname><given-names>LC</given-names></name><name><surname>Chang</surname><given-names>HY</given-names></name><name><surname>Greenleaf</surname><given-names>WJ</given-names></name></person-group><article-title>Transposition of native chromatin for fast and sensitive epigenomic profiling of open chromatin, DNA-binding proteins and nucleosome position</article-title><source>Nat Methods</source><year>2013</year><volume>10</volume><issue>12</issue><fpage>1213</fpage><lpage>8</lpage><?supplied-pmid 3959825?><pub-id pub-id-type="pmid">24097267</pub-id></element-citation></ref><ref id="CR4"><label>4</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buenrostro</surname><given-names>JD</given-names></name><name><surname>Wu</surname><given-names>B</given-names></name><name><surname>Litzenburger</surname><given-names>UM</given-names></name><name><surname>Ruff</surname><given-names>D</given-names></name><name><surname>Gonzales</surname><given-names>ML</given-names></name><name><surname>Snyder</surname><given-names>MP</given-names></name><name><surname>Chang</surname><given-names>HY</given-names></name><name><surname>Greenleaf</surname><given-names>WJ</given-names></name></person-group><article-title>Single-cell chromatin accessibility reveals principles of regulatory variation</article-title><source>Nature</source><year>2015</year><volume>523</volume><issue>7561</issue><fpage>486</fpage><lpage>90</lpage><?supplied-pmid 26083756?><pub-id pub-id-type="pmid">26083756</pub-id></element-citation></ref><ref id="CR5"><label>5</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cusanovich</surname><given-names>DA</given-names></name><name><surname>Daza</surname><given-names>R</given-names></name><name><surname>Adey</surname><given-names>A</given-names></name><name><surname>Pliner</surname><given-names>HA</given-names></name><name><surname>Christiansen</surname><given-names>L</given-names></name><name><surname>Gunderson</surname><given-names>KL</given-names></name><name><surname>Steemers</surname><given-names>FJ</given-names></name><name><surname>Trapnell</surname><given-names>C</given-names></name><name><surname>Shendure</surname><given-names>J</given-names></name></person-group><article-title>Multiplex single-cell profiling of chromatin accessibility by combinatorial cellular indexing</article-title><source>Science</source><year>2015</year><volume>348</volume><issue>6237</issue><fpage>910</fpage><lpage>4</lpage><?supplied-pmid 25953818?><pub-id pub-id-type="pmid">25953818</pub-id></element-citation></ref><ref id="CR6"><label>6</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jin</surname><given-names>W</given-names></name><name><surname>Tang</surname><given-names>Q</given-names></name><name><surname>Wan</surname><given-names>M</given-names></name><name><surname>Cui</surname><given-names>K</given-names></name><name><surname>Zhang</surname><given-names>Y</given-names></name><name><surname>Ren</surname><given-names>G</given-names></name><name><surname>Ni</surname><given-names>B</given-names></name><name><surname>Sklar</surname><given-names>J</given-names></name><name><surname>Przytycka</surname><given-names>TM</given-names></name><name><surname>Childs</surname><given-names>R</given-names></name><etal/></person-group><article-title>Genome-wide detection of DNase I hypersensitive sites in single cells and FFPE tissue samples</article-title><source>Nature</source><year>2015</year><volume>528</volume><issue>7580</issue><fpage>142</fpage><?supplied-pmid 26605532?><pub-id pub-id-type="pmid">26605532</pub-id></element-citation></ref><ref id="CR7"><label>7</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rotem</surname><given-names>A</given-names></name><name><surname>Ram</surname><given-names>O</given-names></name><name><surname>Shoresh</surname><given-names>N</given-names></name><name><surname>Sperling</surname><given-names>RA</given-names></name><name><surname>Goren</surname><given-names>A</given-names></name><name><surname>Weitz</surname><given-names>DA</given-names></name><name><surname>Bernstein</surname><given-names>BE</given-names></name></person-group><article-title>Single-cell ChIP-seq reveals cell subpopulations defined by chromatin state</article-title><source>Nat Biotechnol</source><year>2015</year><volume>33</volume><issue>11</issue><fpage>1165</fpage><?supplied-pmid 26458175?><pub-id pub-id-type="pmid">26458175</pub-id></element-citation></ref><ref id="CR8"><label>8</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Clark</surname><given-names>SJ</given-names></name><name><surname>Argelaguet</surname><given-names>R</given-names></name><name><surname>Kapourani</surname><given-names>C-A</given-names></name><name><surname>Stubbs</surname><given-names>TM</given-names></name><name><surname>Lee</surname><given-names>HJ</given-names></name><name><surname>Alda-Catalinas</surname><given-names>C</given-names></name><name><surname>Krueger</surname><given-names>F</given-names></name><name><surname>Sanguinetti</surname><given-names>G</given-names></name><name><surname>Kelsey</surname><given-names>G</given-names></name><name><surname>Marioni</surname><given-names>JC</given-names></name><etal/></person-group><article-title>scNMT-seq enables joint profiling of chromatin accessibility DNA methylation and transcription in single cells</article-title><source>Nat Commun</source><year>2018</year><volume>9</volume><issue>1</issue><fpage>781</fpage><?supplied-pmid 29472610?><pub-id pub-id-type="pmid">29472610</pub-id></element-citation></ref><ref id="CR9"><label>9</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>X</given-names></name><name><surname>Litzenburger</surname><given-names>UM</given-names></name><name><surname>Wei</surname><given-names>Y</given-names></name><name><surname>Schep</surname><given-names>AN</given-names></name><name><surname>LaGory</surname><given-names>EL</given-names></name><name><surname>Choudhry</surname><given-names>H</given-names></name><name><surname>Giaccia</surname><given-names>AJ</given-names></name><name><surname>Greenleaf</surname><given-names>WJ</given-names></name><name><surname>Chang</surname><given-names>HY</given-names></name></person-group><article-title>Joint single-cell DNA accessibility and protein epitope profiling reveals environmental regulation of epigenomic heterogeneity</article-title><source>Nat Commun</source><year>2018</year><volume>9</volume><issue>1</issue><fpage>4590</fpage><?supplied-pmid 30389926?><pub-id pub-id-type="pmid">30389926</pub-id></element-citation></ref><ref id="CR10"><label>10</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cao</surname><given-names>J</given-names></name><name><surname>Cusanovich</surname><given-names>DA</given-names></name><name><surname>Ramani</surname><given-names>V</given-names></name><name><surname>Aghamirzaie</surname><given-names>D</given-names></name><name><surname>Pliner</surname><given-names>HA</given-names></name><name><surname>Hill</surname><given-names>AJ</given-names></name><name><surname>Daza</surname><given-names>RM</given-names></name><name><surname>McFaline-Figueroa</surname><given-names>JL</given-names></name><name><surname>Packer</surname><given-names>JS</given-names></name><name><surname>Christiansen</surname><given-names>L</given-names></name><etal/></person-group><article-title>Joint profiling of chromatin accessibility and gene expression in thousands of single cells</article-title><source>Science</source><year>2018</year><volume>361</volume><issue>6409</issue><fpage>1380</fpage><lpage>5</lpage><?supplied-pmid 30166440?><pub-id pub-id-type="pmid">30166440</pub-id></element-citation></ref><ref id="CR11"><label>11</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Regev</surname><given-names>A</given-names></name><name><surname>Teichmann</surname><given-names>SA</given-names></name><name><surname>Lander</surname><given-names>ES</given-names></name><name><surname>Amit</surname><given-names>I</given-names></name><name><surname>Benoist</surname><given-names>C</given-names></name><name><surname>Birney</surname><given-names>E</given-names></name><name><surname>Bodenmiller</surname><given-names>B</given-names></name><name><surname>Campbell</surname><given-names>P</given-names></name><name><surname>Carninci</surname><given-names>P</given-names></name><name><surname>Clatworthy</surname><given-names>M</given-names></name><etal/></person-group><article-title>The human cell atlas</article-title><source>Elife</source><year>2017</year><volume>6</volume><fpage>27041</fpage></element-citation></ref><ref id="CR12"><label>12</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schep</surname><given-names>AN</given-names></name><name><surname>Wu</surname><given-names>B</given-names></name><name><surname>Buenrostro</surname><given-names>JD</given-names></name><name><surname>Greenleaf</surname><given-names>WJ</given-names></name></person-group><article-title>chromVAR: inferring transcription-factor-associated accessibility from single-cell epigenomic data</article-title><source>Nat Methods</source><year>2017</year><volume>14</volume><issue>10</issue><fpage>975</fpage><?supplied-pmid 28825706?><pub-id pub-id-type="pmid">28825706</pub-id></element-citation></ref><ref id="CR13"><label>13</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ji</surname><given-names>Z.</given-names></name><name><surname>Zhou</surname><given-names>W.</given-names></name><name><surname>Ji</surname><given-names>H.</given-names></name></person-group><article-title>Single-cell regulome data analysis by SCRAT</article-title><source>Bioinformatics</source><year>2017</year><volume>33</volume><issue>18</issue><fpage>2930</fpage><lpage>2</lpage><?supplied-pmid 28505247?><pub-id pub-id-type="pmid">28505247</pub-id></element-citation></ref><ref id="CR14"><label>14</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>de Boer</surname><given-names>CG</given-names></name><name><surname>Regev</surname><given-names>A</given-names></name></person-group><article-title>Brockman: deciphering variance in epigenomic regulators by k-mer factorization</article-title><source>BMC Bioinformatics</source><year>2018</year><volume>19</volume><issue>1</issue><fpage>253</fpage><?supplied-pmid 29970004?><pub-id pub-id-type="pmid">29970004</pub-id></element-citation></ref><ref id="CR15"><label>15</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Consortium</surname><given-names>EP</given-names></name><etal/></person-group><article-title>An integrated encyclopedia of DNA elements in the human genome</article-title><source>Nature</source><year>2012</year><volume>489</volume><issue>7414</issue><fpage>57</fpage><pub-id pub-id-type="pmid">22955616</pub-id></element-citation></ref><ref id="CR16"><label>16</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yue</surname><given-names>F</given-names></name><name><surname>Cheng</surname><given-names>Y</given-names></name><name><surname>Breschi</surname><given-names>A</given-names></name><name><surname>Vierstra</surname><given-names>J</given-names></name><name><surname>Wu</surname><given-names>W</given-names></name><name><surname>Ryba</surname><given-names>T</given-names></name><name><surname>Sandstrom</surname><given-names>R</given-names></name><name><surname>Ma</surname><given-names>Z</given-names></name><name><surname>Davis</surname><given-names>C</given-names></name><name><surname>Pope</surname><given-names>BD</given-names></name><etal/></person-group><article-title>A comparative encyclopedia of DNA elements in the mouse genome</article-title><source>Nature</source><year>2014</year><volume>515</volume><issue>7527</issue><fpage>355</fpage><?supplied-pmid 25409824?><pub-id pub-id-type="pmid">25409824</pub-id></element-citation></ref><ref id="CR17"><label>17</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhao</surname><given-names>C</given-names></name><name><surname>Hu</surname><given-names>S</given-names></name><name><surname>Huo</surname><given-names>X</given-names></name><name><surname>Zhang</surname><given-names>Y</given-names></name></person-group><article-title>Dr. seq2: a quality control and analysis pipeline for parallel single cell transcriptome and epigenome data</article-title><source>PLoS One</source><year>2017</year><volume>12</volume><issue>7</issue><fpage>0180583</fpage></element-citation></ref><ref id="CR18"><label>18</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pliner</surname><given-names>HA</given-names></name><name><surname>Packer</surname><given-names>JS</given-names></name><name><surname>McFaline-Figueroa</surname><given-names>JL</given-names></name><name><surname>Cusanovich</surname><given-names>DA</given-names></name><name><surname>Daza</surname><given-names>RM</given-names></name><name><surname>Aghamirzaie</surname><given-names>D</given-names></name><name><surname>Srivatsan</surname><given-names>S</given-names></name><name><surname>Qiu</surname><given-names>X</given-names></name><name><surname>Jackson</surname><given-names>D</given-names></name><name><surname>Minkina</surname><given-names>A</given-names></name><etal/></person-group><article-title>Cicero predicts cis-regulatory DNA interactions from single-cell chromatin accessibility data</article-title><source>Mol Cell</source><year>2018</year><volume>71</volume><issue>5</issue><fpage>858</fpage><lpage>71</lpage><?supplied-pmid 30078726?><pub-id pub-id-type="pmid">30078726</pub-id></element-citation></ref><ref id="CR19"><label>19</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>Y</given-names></name><name><surname>Liu</surname><given-names>T</given-names></name><name><surname>Meyer</surname><given-names>CA</given-names></name><name><surname>Eeckhoute</surname><given-names>J</given-names></name><name><surname>Johnson</surname><given-names>DS</given-names></name><name><surname>Bernstein</surname><given-names>BE</given-names></name><name><surname>Nusbaum</surname><given-names>C</given-names></name><name><surname>Myers</surname><given-names>RM</given-names></name><name><surname>Brown</surname><given-names>M</given-names></name><name><surname>Li</surname><given-names>W</given-names></name><etal/></person-group><article-title>Model-based analysis of ChIP-seq (MACS)</article-title><source>Genome Biol</source><year>2008</year><volume>9</volume><issue>9</issue><fpage>137</fpage></element-citation></ref><ref id="CR20"><label>20</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Baker</surname><given-names>SM</given-names></name><name><surname>Rogerson</surname><given-names>C</given-names></name><name><surname>Hayes</surname><given-names>A</given-names></name><name><surname>Sharrocks</surname><given-names>AD</given-names></name><name><surname>Rattray</surname><given-names>M</given-names></name></person-group><article-title>Classifying cells with Scasat, a single-cell ATAC-seq analysis tool</article-title><source>Nucleic Acids Res</source><year>2019</year><volume>47</volume><issue>2</issue><fpage>e10</fpage><?supplied-pmid 30335168?><pub-id pub-id-type="pmid">30335168</pub-id></element-citation></ref><ref id="CR21"><label>21</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Urrutia</surname><given-names>E</given-names></name><name><surname>Chen</surname><given-names>L</given-names></name><name><surname>Zhou</surname><given-names>H</given-names></name><name><surname>Jiang</surname><given-names>Y</given-names></name></person-group><article-title>Destin: toolkit for single-cell analysis of chromatin accessibility</article-title><source>Bioinformatics</source><year>2019</year><volume>35</volume><issue>19</issue><fpage>3818</fpage><lpage>20</lpage><?supplied-pmid 30821321?><pub-id pub-id-type="pmid">30821321</pub-id></element-citation></ref><ref id="CR22"><label>22</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zamanighomi</surname><given-names>M</given-names></name><name><surname>Lin</surname><given-names>Z</given-names></name><name><surname>Daley</surname><given-names>T</given-names></name><name><surname>Chen</surname><given-names>X</given-names></name><name><surname>Duren</surname><given-names>Z</given-names></name><name><surname>Schep</surname><given-names>A</given-names></name><name><surname>Greenleaf</surname><given-names>WJ</given-names></name><name><surname>Wong</surname><given-names>WH</given-names></name></person-group><article-title>Unsupervised clustering and epigenetic classification of single cells</article-title><source>Nat Commun</source><year>2018</year><volume>9</volume><issue>1</issue><fpage>2410</fpage><?supplied-pmid 29925875?><pub-id pub-id-type="pmid">29925875</pub-id></element-citation></ref><ref id="CR23"><label>23</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cai</surname><given-names>S</given-names></name><name><surname>Georgakilas</surname><given-names>GK</given-names></name><name><surname>Johnson</surname><given-names>JL</given-names></name><name><surname>Vahedi</surname><given-names>G</given-names></name></person-group><article-title>A cosine similarity-based method to infer variability of chromatin accessibility at the single-cell level</article-title><source>Front Genet</source><year>2018</year><volume>9</volume><fpage>319</fpage><?supplied-pmid 30158954?><pub-id pub-id-type="pmid">30158954</pub-id></element-citation></ref><ref id="CR24"><label>24</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gonz&#x000e1;lez-Blas</surname><given-names>CB</given-names></name><name><surname>Minnoye</surname><given-names>L</given-names></name><name><surname>Papasokrati</surname><given-names>D</given-names></name><name><surname>Aibar</surname><given-names>S</given-names></name><name><surname>Hulselmans</surname><given-names>G</given-names></name><name><surname>Christiaens</surname><given-names>V</given-names></name><name><surname>Davie</surname><given-names>K</given-names></name><name><surname>Wouters</surname><given-names>J</given-names></name><name><surname>Aerts</surname><given-names>S</given-names></name></person-group><article-title>cisTopic: cis-regulatory topic modeling on single-cell ATAC-seq data</article-title><source>Nat Methods</source><year>2019</year><volume>16</volume><issue>5</issue><fpage>397</fpage><pub-id pub-id-type="pmid">30962623</pub-id></element-citation></ref><ref id="CR25"><label>25</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhou</surname><given-names>W</given-names></name><name><surname>Sherwood</surname><given-names>B</given-names></name><name><surname>Ji</surname><given-names>Z</given-names></name><name><surname>Xue</surname><given-names>Y</given-names></name><name><surname>Du</surname><given-names>F</given-names></name><name><surname>Bai</surname><given-names>J</given-names></name><name><surname>Ying</surname><given-names>M</given-names></name><name><surname>Ji</surname><given-names>H</given-names></name></person-group><article-title>Genome-wide prediction of DNase I hypersensitivity using gene expression</article-title><source>Nat Commun</source><year>2017</year><volume>8</volume><issue>1</issue><fpage>1038</fpage><?supplied-pmid 29051481?><pub-id pub-id-type="pmid">29051481</pub-id></element-citation></ref><ref id="CR26"><label>26</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fraley</surname><given-names>C</given-names></name><name><surname>Raftery</surname><given-names>AE</given-names></name></person-group><article-title>Model-based clustering, discriminant analysis, and density estimation</article-title><source>J Am Stat Assoc</source><year>2002</year><volume>97</volume><issue>458</issue><fpage>611</fpage><lpage>31</lpage></element-citation></ref><ref id="CR27"><label>27</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buenrostro</surname><given-names>JD</given-names></name><name><surname>Corces</surname><given-names>MR</given-names></name><name><surname>Lareau</surname><given-names>CA</given-names></name><name><surname>Wu</surname><given-names>B</given-names></name><name><surname>Schep</surname><given-names>AN</given-names></name><name><surname>Aryee</surname><given-names>MJ</given-names></name><name><surname>Majeti</surname><given-names>R</given-names></name><name><surname>Chang</surname><given-names>HY</given-names></name><name><surname>Greenleaf</surname><given-names>WJ</given-names></name></person-group><article-title>Integrated single-cell analysis maps the continuous regulatory landscape of human hematopoietic differentiation</article-title><source>Cell</source><year>2018</year><volume>173</volume><issue>6</issue><fpage>1535</fpage><lpage>1548.e16</lpage><?supplied-pmid 29706549?><pub-id pub-id-type="pmid">29706549</pub-id></element-citation></ref><ref id="CR28"><label>28</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Corces</surname><given-names>MR</given-names></name><name><surname>Buenrostro</surname><given-names>JD</given-names></name><name><surname>Wu</surname><given-names>B</given-names></name><name><surname>Greenside</surname><given-names>PG</given-names></name><name><surname>Chan</surname><given-names>SM</given-names></name><name><surname>Koenig</surname><given-names>JL</given-names></name><name><surname>Snyder</surname><given-names>MP</given-names></name><name><surname>Pritchard</surname><given-names>JK</given-names></name><name><surname>Kundaje</surname><given-names>A</given-names></name><name><surname>Greenleaf</surname><given-names>WJ</given-names></name><etal/></person-group><article-title>Lineage-specific and single-cell chromatin accessibility charts human hematopoiesis and leukemia evolution</article-title><source>Nat Genet</source><year>2016</year><volume>48</volume><issue>10</issue><fpage>1193</fpage><lpage>203</lpage><?supplied-pmid 27526324?><pub-id pub-id-type="pmid">27526324</pub-id></element-citation></ref><ref id="CR29"><label>29</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cusanovich</surname><given-names>DA</given-names></name><name><surname>Hill</surname><given-names>AJ</given-names></name><name><surname>Aghamirzaie</surname><given-names>D</given-names></name><name><surname>Daza</surname><given-names>RM</given-names></name><name><surname>Pliner</surname><given-names>HA</given-names></name><name><surname>Berletch</surname><given-names>JB</given-names></name><name><surname>Filippova</surname><given-names>GN</given-names></name><name><surname>Huang</surname><given-names>X</given-names></name><name><surname>Christiansen</surname><given-names>L</given-names></name><name><surname>DeWitt</surname><given-names>WS</given-names></name><etal/></person-group><article-title>A single-cell atlas of in vivo mammalian chromatin accessibility</article-title><source>Cell</source><year>2018</year><volume>174</volume><issue>5</issue><fpage>1309</fpage><lpage>24</lpage><?supplied-pmid 30078704?><pub-id pub-id-type="pmid">30078704</pub-id></element-citation></ref><ref id="CR30"><label>30</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>H</given-names></name><name><surname>Lareau</surname><given-names>C</given-names></name><name><surname>Andreani</surname><given-names>T</given-names></name><name><surname>Vinyard</surname><given-names>ME</given-names></name><name><surname>Garcia</surname><given-names>SP</given-names></name><name><surname>Clement</surname><given-names>K</given-names></name><name><surname>Andrade-Navarro</surname><given-names>MA</given-names></name><name><surname>Buenrostro</surname><given-names>JD</given-names></name><name><surname>Pinello</surname><given-names>L</given-names></name></person-group><article-title>Assessment of computational methods for the analysis of single-cell ATAC-seq data</article-title><source>Genome Biol</source><year>2019</year><volume>20</volume><issue>1</issue><fpage>1</fpage><lpage>25</lpage><pub-id pub-id-type="pmid">30606230</pub-id></element-citation></ref><ref id="CR31"><label>31</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ji</surname><given-names>H</given-names></name><name><surname>Jiang</surname><given-names>H</given-names></name><name><surname>Ma</surname><given-names>W</given-names></name><name><surname>Johnson</surname><given-names>DS</given-names></name><name><surname>Myers</surname><given-names>RM</given-names></name><name><surname>Wong</surname><given-names>WH</given-names></name></person-group><article-title>An integrated software system for analyzing ChIP-chip and ChIP-seq data</article-title><source>Nat Biotechnol</source><year>2008</year><volume>26</volume><issue>11</issue><fpage>1293</fpage><lpage>300</lpage><?supplied-pmid 18978777?><pub-id pub-id-type="pmid">18978777</pub-id></element-citation></ref><ref id="CR32"><label>32</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Maaten</surname><given-names>Lvd</given-names></name><name><surname>Hinton</surname><given-names>G</given-names></name></person-group><article-title>Visualizing data using t-SNE</article-title><source>J Mach Learn Res</source><year>2008</year><volume>9</volume><issue>Nov</issue><fpage>2579</fpage><lpage>605</lpage></element-citation></ref><ref id="CR33"><label>33</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Satpathy</surname><given-names>AT</given-names></name><name><surname>Granja</surname><given-names>JM</given-names></name><name><surname>Yost</surname><given-names>KE</given-names></name><name><surname>Qi</surname><given-names>Y</given-names></name><name><surname>Meschi</surname><given-names>F</given-names></name><name><surname>McDermott</surname><given-names>GP</given-names></name><name><surname>Olsen</surname><given-names>BN</given-names></name><name><surname>Mumbach</surname><given-names>MR</given-names></name><name><surname>Pierce</surname><given-names>SE</given-names></name><name><surname>Corces</surname><given-names>MR</given-names></name><etal/></person-group><article-title>Massively parallel single-cell chromatin landscapes of human immune cell development and intratumoral T cell exhaustion</article-title><source>Nat Biotechnol</source><year>2019</year><volume>37</volume><issue>8</issue><fpage>925</fpage><lpage>36</lpage><?supplied-pmid 31375813?><pub-id pub-id-type="pmid">31375813</pub-id></element-citation></ref><ref id="CR34"><label>34</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Saelens</surname><given-names>W</given-names></name><name><surname>Cannoodt</surname><given-names>R</given-names></name><name><surname>Todorov</surname><given-names>H</given-names></name><name><surname>Saeys</surname><given-names>Y</given-names></name></person-group><article-title>A comparison of single-cell trajectory inference methods</article-title><source>Nat Biotechnol</source><year>2019</year><volume>37</volume><issue>5</issue><fpage>547</fpage><?supplied-pmid 30936559?><pub-id pub-id-type="pmid">30936559</pub-id></element-citation></ref><ref id="CR35"><label>35</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ramani</surname><given-names>V</given-names></name><name><surname>Deng</surname><given-names>X</given-names></name><name><surname>Qiu</surname><given-names>R</given-names></name><name><surname>Gunderson</surname><given-names>KL</given-names></name><name><surname>Steemers</surname><given-names>FJ</given-names></name><name><surname>Disteche</surname><given-names>CM</given-names></name><name><surname>Noble</surname><given-names>WS</given-names></name><name><surname>Duan</surname><given-names>Z</given-names></name><name><surname>Shendure</surname><given-names>J</given-names></name></person-group><article-title>Massively multiplex single-cell Hi-C</article-title><source>Nat Methods</source><year>2017</year><volume>14</volume><issue>3</issue><fpage>263</fpage><?supplied-pmid 28135255?><pub-id pub-id-type="pmid">28135255</pub-id></element-citation></ref><ref id="CR36"><label>36</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Amemiya</surname><given-names>HM</given-names></name><name><surname>Kundaje</surname><given-names>A</given-names></name><name><surname>Boyle</surname><given-names>AP</given-names></name></person-group><article-title>The encode blacklist: identification of problematic regions of the genome</article-title><source>Sci Rep</source><year>2019</year><volume>9</volume><issue>1</issue><fpage>9354</fpage><?supplied-pmid 31249361?><pub-id pub-id-type="pmid">31249361</pub-id></element-citation></ref><ref id="CR37"><label>37</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ramsay</surname><given-names>JO</given-names></name><etal/></person-group><article-title>Monotone regression splines in action</article-title><source>Stat Sci</source><year>1988</year><volume>3</volume><issue>4</issue><fpage>425</fpage><lpage>41</lpage></element-citation></ref><ref id="CR38"><label>38</label><mixed-citation publication-type="other">Chen T, Guestrin C. Xgboost: a scalable tree boosting system. In: Proceedings of the 22Nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. New York: Association for Computing Machinery. p. 785&#x02013;94.</mixed-citation></ref><ref id="CR39"><label>39</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sandelin</surname><given-names>A</given-names></name><name><surname>Alkema</surname><given-names>W</given-names></name><name><surname>Engstr&#x000f6;m</surname><given-names>P</given-names></name><name><surname>Wasserman</surname><given-names>WW</given-names></name><name><surname>Lenhard</surname><given-names>B</given-names></name></person-group><article-title>Jaspar: an open-access database for eukaryotic transcription factor binding profiles</article-title><source>Nucleic Acids Res</source><year>2004</year><volume>32</volume><issue>suppl_1</issue><fpage>91</fpage><lpage>4</lpage></element-citation></ref><ref id="CR40"><label>40</label><mixed-citation publication-type="other">Ji Z, Zhou W, Hou W, Ji H. Single-cell ATAC-seq signal extraction and enhancement with SCATE. Github. 2019. <ext-link ext-link-type="uri" xlink:href="https://github.com/zji90/SCATE">https://github.com/zji90/SCATE</ext-link>.</mixed-citation></ref><ref id="CR41"><label>41</label><mixed-citation publication-type="other">Ji Z., Zhou W., Hou W., Ji H.Single-cell ATAC-seq signal extraction and enhancement with SCATE. Zenodo. 2020. 10.5281/zenodo.3711558.</mixed-citation></ref><ref id="CR42"><label>42</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gentleman</surname><given-names>RC</given-names></name><name><surname>Carey</surname><given-names>VJ</given-names></name><name><surname>Bates</surname><given-names>DM</given-names></name><name><surname>Bolstad</surname><given-names>B</given-names></name><name><surname>Dettling</surname><given-names>M</given-names></name><name><surname>Dudoit</surname><given-names>S</given-names></name><name><surname>Ellis</surname><given-names>B</given-names></name><name><surname>Gautier</surname><given-names>L</given-names></name><name><surname>Ge</surname><given-names>Y</given-names></name><name><surname>Gentry</surname><given-names>J</given-names></name><etal/></person-group><article-title>Bioconductor: open software development for computational biology and bioinformatics</article-title><source>Genome Biol</source><year>2004</year><volume>5</volume><issue>10</issue><fpage>80</fpage></element-citation></ref><ref id="CR43"><label>43</label><mixed-citation publication-type="other">The ENCODE Project Consortium. The ENCODE (ENCyclopedia Of DNA Elements) Project. 2019. <ext-link ext-link-type="uri" xlink:href="https://www.encodeproject.org/">https://www.encodeproject.org/</ext-link>. Accessed 1 Jan 2019.</mixed-citation></ref><ref id="CR44"><label>44</label><mixed-citation publication-type="other">Buenrostro JD. Single-cell chromatin accessibility data using scATAC-seq. GSE65360.Gene Expr Omnibus. 2015. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE65360">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE65360</ext-link>. Accessed 1 Jan 2019.</mixed-citation></ref><ref id="CR45"><label>45</label><mixed-citation publication-type="other">Buenrostro JD. Single-cell epigenomics maps the continuous regulatory landscape of human hematopoietic differentiation. GSE96769. Gene Expr Omnibus. 2018. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE96769">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE96769</ext-link>. Accessed 1 Jan 2019.</mixed-citation></ref><ref id="CR46"><label>46</label><mixed-citation publication-type="other">Cusanovich DA, Hill AJ, Aghamirzaie D, Daza RM, Pliner HA, Berletch JB, Filippova GN, Huang X, Christiansen L, DeWitt WS, Lee C, Regalado SG, Read DF, Steemers FJ, Disteche CM, Trapnell C, Shendure J. A single-cell atlas of in vivo mammalian chromatin accessibility. GSE111586.Gene Expr Omnibus. 2018. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE111586">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE111586</ext-link>. Accessed 1 Jan 2019.</mixed-citation></ref><ref id="CR47"><label>47</label><mixed-citation publication-type="other">Granja J., Zheng G., Shah P.Massively parallel single-cell chromatin landscapes of human immune cell development and intratumoral T cell exhaustion. GSE129785.Gene Expr Omnibus. 2019. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE129785">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE129785</ext-link>. Accessed 1 Mar 2020.</mixed-citation></ref><ref id="CR48"><label>48</label><mixed-citation publication-type="other">Buenrostro J. D.Lineage-specific and single-cell chromatin accessibility charts human hematopoiesis and leukemia evolution. GSE74912.Gene Expr Omnibus. 2016. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE74912">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE74912</ext-link>. Accessed 1 Jan 2019.</mixed-citation></ref></ref-list></back></article>